{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ScatterPlot from './ScatterPlot';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regionList = ['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America'];\nconst regionColorMap = {};\nregionList.forEach((region, i) => {\n  regionColorMap[region] = d3.schemeTableau10[i]; // Use d3 color scheme\n});\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(2022);\n  const [yearRange, setYearRange] = useState({\n    min: 1950,\n    max: 2022\n  });\n  const [activeRegions, setActiveRegions] = useState([]); // All regions visible initially\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n      const years = response.data.map(d => d.year);\n      const minYear = 1800;\n      const maxYear = 2022;\n      setYearRange({\n        min: minYear,\n        max: maxYear\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Toggle region visibility\n  const toggleRegion = region => {\n    setActiveRegions(prev => prev.includes(region) ? prev.filter(r => r !== region) : [...prev, region]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GDP vs Pollution Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yearSlider\",\n        children: [\"Year: \", selectedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"yearSlider\",\n        type: \"range\",\n        min: yearRange.min,\n        max: yearRange.max,\n        value: selectedYear,\n        onChange: e => setSelectedYear(parseInt(e.target.value)),\n        style: {\n          width: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Region Legend (Click to Filter):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          marginTop: '10px'\n        },\n        children: regionList.map(region => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleRegion(region),\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginRight: '20px',\n            cursor: 'pointer',\n            opacity: activeRegions.includes(region) ? 1 : 0.3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '12px',\n              height: '12px',\n              borderRadius: '50%',\n              backgroundColor: regionColorMap[region],\n              marginRight: '6px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n      data: data,\n      selectedYear: selectedYear,\n      regionColorMap: regionColorMap,\n      activeRegions: activeRegions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"xt8riZWWyVWc3AZocELf1OX10j8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","ScatterPlot","d3","jsxDEV","_jsxDEV","regionList","regionColorMap","forEach","region","i","schemeTableau10","Home","_s","data","setData","selectedYear","setSelectedYear","yearRange","setYearRange","min","max","activeRegions","setActiveRegions","get","then","response","years","map","d","year","minYear","maxYear","catch","error","console","toggleRegion","prev","includes","filter","r","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","id","type","value","onChange","e","parseInt","target","width","display","flexWrap","marginTop","onClick","alignItems","marginRight","cursor","opacity","height","borderRadius","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/Home.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ScatterPlot from './ScatterPlot';\r\nimport * as d3 from 'd3';\r\n\r\nconst regionList = ['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America'];\r\n\r\n\r\n\r\n\r\nconst regionColorMap = {};\r\nregionList.forEach((region, i) => {\r\n  regionColorMap[region] = d3.schemeTableau10[i]; // Use d3 color scheme\r\n});\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(2022);\r\n  const [yearRange, setYearRange] = useState({ min: 1950, max: 2022 });\r\n  const [activeRegions, setActiveRegions] = useState([]); // All regions visible initially\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/data')\r\n      .then(response => {\r\n        setData(response.data);\r\n\r\n        const years = response.data.map(d => d.year);\r\n        const minYear = 1800;\r\n        const maxYear = 2022;\r\n        setYearRange({ min: minYear, max: maxYear });\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  // Toggle region visibility\r\n  const toggleRegion = (region) => {\r\n    setActiveRegions(prev =>\r\n      prev.includes(region)\r\n        ? prev.filter(r => r !== region)\r\n        : [...prev, region]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>GDP vs Pollution Visualization</h1>\r\n\r\n      {/* Year Slider */}\r\n      <div style={{ marginBottom: '30px' }}>\r\n        <label htmlFor=\"yearSlider\">Year: {selectedYear}</label><br />\r\n        <input\r\n          id=\"yearSlider\"\r\n          type=\"range\"\r\n          min={yearRange.min}\r\n          max={yearRange.max}\r\n          value={selectedYear}\r\n          onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n          style={{ width: '400px' }}\r\n        />\r\n      </div>\r\n\r\n      {/* Interactive Region Legend */}\r\n      <div style={{ marginBottom: '30px' }}>\r\n        <strong>Region Legend (Click to Filter):</strong>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', marginTop: '10px' }}>\r\n          {regionList.map(region => (\r\n            <div\r\n              key={region}\r\n              onClick={() => toggleRegion(region)}\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginRight: '20px',\r\n                cursor: 'pointer',\r\n                opacity: activeRegions.includes(region) ? 1 : 0.3\r\n              }}\r\n            >\r\n              <div style={{\r\n                width: '12px',\r\n                height: '12px',\r\n                borderRadius: '50%',\r\n                backgroundColor: regionColorMap[region],\r\n                marginRight: '6px'\r\n              }}></div>\r\n              <span>{region}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <ScatterPlot\r\n  data={data}\r\n  selectedYear={selectedYear}\r\n  regionColorMap={regionColorMap}\r\n  activeRegions={activeRegions}\r\n/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,eAAe,CAAC;AAK5F,MAAMC,cAAc,GAAG,CAAC,CAAC;AACzBD,UAAU,CAACE,OAAO,CAAC,CAACC,MAAM,EAAEC,CAAC,KAAK;EAChCH,cAAc,CAACE,MAAM,CAAC,GAAGN,EAAE,CAACQ,eAAe,CAACD,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC;AAIF,MAAME,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC,CAAC;EACpE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExDC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACuB,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAI;MAChBX,OAAO,CAACW,QAAQ,CAACZ,IAAI,CAAC;MAEtB,MAAMa,KAAK,GAAGD,QAAQ,CAACZ,IAAI,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;MAC5C,MAAMC,OAAO,GAAG,IAAI;MACpB,MAAMC,OAAO,GAAG,IAAI;MACpBb,YAAY,CAAC;QAAEC,GAAG,EAAEW,OAAO;QAAEV,GAAG,EAAEW;MAAQ,CAAC,CAAC;IAC9C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,YAAY,GAAI3B,MAAM,IAAK;IAC/Bc,gBAAgB,CAACc,IAAI,IACnBA,IAAI,CAACC,QAAQ,CAAC7B,MAAM,CAAC,GACjB4B,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK/B,MAAM,CAAC,GAC9B,CAAC,GAAG4B,IAAI,EAAE5B,MAAM,CACtB,CAAC;EACH,CAAC;EAED,oBACEJ,OAAA;IAAKoC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BtC,OAAA;MAAAsC,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvC1C,OAAA;MAAKoC,KAAK,EAAE;QAAEO,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBACnCtC,OAAA;QAAO4C,OAAO,EAAC,YAAY;QAAAN,QAAA,GAAC,QAAM,EAAC3B,YAAY;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAA1C,OAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9D1C,OAAA;QACE6C,EAAE,EAAC,YAAY;QACfC,IAAI,EAAC,OAAO;QACZ/B,GAAG,EAAEF,SAAS,CAACE,GAAI;QACnBC,GAAG,EAAEH,SAAS,CAACG,GAAI;QACnB+B,KAAK,EAAEpC,YAAa;QACpBqC,QAAQ,EAAGC,CAAC,IAAKrC,eAAe,CAACsC,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;QAC3DX,KAAK,EAAE;UAAEgB,KAAK,EAAE;QAAQ;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN1C,OAAA;MAAKoC,KAAK,EAAE;QAAEO,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBACnCtC,OAAA;QAAAsC,QAAA,EAAQ;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjD1C,OAAA;QAAKoC,KAAK,EAAE;UAAEiB,OAAO,EAAE,MAAM;UAAEC,QAAQ,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAjB,QAAA,EAClErC,UAAU,CAACsB,GAAG,CAACnB,MAAM,iBACpBJ,OAAA;UAEEwD,OAAO,EAAEA,CAAA,KAAMzB,YAAY,CAAC3B,MAAM,CAAE;UACpCgC,KAAK,EAAE;YACLiB,OAAO,EAAE,MAAM;YACfI,UAAU,EAAE,QAAQ;YACpBC,WAAW,EAAE,MAAM;YACnBC,MAAM,EAAE,SAAS;YACjBC,OAAO,EAAE3C,aAAa,CAACgB,QAAQ,CAAC7B,MAAM,CAAC,GAAG,CAAC,GAAG;UAChD,CAAE;UAAAkC,QAAA,gBAEFtC,OAAA;YAAKoC,KAAK,EAAE;cACVgB,KAAK,EAAE,MAAM;cACbS,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBC,eAAe,EAAE7D,cAAc,CAACE,MAAM,CAAC;cACvCsD,WAAW,EAAE;YACf;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACT1C,OAAA;YAAAsC,QAAA,EAAOlC;UAAM;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAjBhBtC,MAAM;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBR,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN1C,OAAA,CAACH,WAAW;MAChBY,IAAI,EAAEA,IAAK;MACXE,YAAY,EAAEA,YAAa;MAC3BT,cAAc,EAAEA,cAAe;MAC/Be,aAAa,EAAEA;IAAc;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEV,CAAC;AAAClC,EAAA,CAnFID,IAAI;AAAAyD,EAAA,GAAJzD,IAAI;AAqFV,eAAeA,IAAI;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}