{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import ScatterPlot from './ScatterPlot';\n\n// const Home = () => {\n//   const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:5000/api/data')\n//       .then(response => {\n//         console.log('Fetched Data:', response.data); // Debugging\n//         setData(response.data);\n//       })\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []);\n\n//   return (\n//     <div style={{ padding: '20px' }}>\n//       <h1>GDP vs Pollution Visualization</h1>\n//       <div style={{ padding: '20px' }}>\n//       <h1>GDP vs Pollution Visualization</h1>\n\n//       <div style={{ marginBottom: '30px' }}>\n//         <label htmlFor=\"yearSlider\">Year: {selectedYear}</label><br />\n//         <input\n//           id=\"yearSlider\"\n//           type=\"range\"\n//           min={yearRange.min}\n//           max={yearRange.max}\n//           value={selectedYear}\n//           onChange={(e) => setSelectedYear(parseInt(e.target.value))}\n//           style={{ width: '400px' }}\n//         />\n//       </div>\n//       </div>\n//       <ScatterPlot data={data} selectedYear={2022} />\n\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ScatterPlot from './ScatterPlot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(2022); // default year\n  const [yearRange, setYearRange] = useState({\n    min: 1950,\n    max: 2022\n  }); // you can customize this\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n\n      // Dynamically calculate min and max years from the dataset\n      const years = response.data.map(d => d.year);\n      const minYear = 1800; // Math.min(...years);\n      const maxYear = 2022; //  Math.max(...years);\n      setYearRange({\n        min: minYear,\n        max: maxYear\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GDP vs Pollution Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yearSlider\",\n        children: [\"Year: \", selectedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"yearSlider\",\n        type: \"range\",\n        min: yearRange.min,\n        max: yearRange.max,\n        value: selectedYear,\n        onChange: e => setSelectedYear(parseInt(e.target.value)),\n        style: {\n          width: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n      data: data,\n      selectedYear: selectedYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"vFz1c1B1WpZhfQW8AbWCA41V+bE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","ScatterPlot","jsxDEV","_jsxDEV","Home","_s","data","setData","selectedYear","setSelectedYear","yearRange","setYearRange","min","max","get","then","response","years","map","d","year","minYear","maxYear","catch","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","id","type","value","onChange","e","parseInt","target","width","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/Home.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import ScatterPlot from './ScatterPlot';\r\n\r\n// const Home = () => {\r\n//   const [data, setData] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:5000/api/data')\r\n//       .then(response => {\r\n//         console.log('Fetched Data:', response.data); // Debugging\r\n//         setData(response.data);\r\n//       })\r\n//       .catch(error => console.error('Error fetching data:', error));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px' }}>\r\n//       <h1>GDP vs Pollution Visualization</h1>\r\n//       <div style={{ padding: '20px' }}>\r\n//       <h1>GDP vs Pollution Visualization</h1>\r\n\r\n//       <div style={{ marginBottom: '30px' }}>\r\n//         <label htmlFor=\"yearSlider\">Year: {selectedYear}</label><br />\r\n//         <input\r\n//           id=\"yearSlider\"\r\n//           type=\"range\"\r\n//           min={yearRange.min}\r\n//           max={yearRange.max}\r\n//           value={selectedYear}\r\n//           onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n//           style={{ width: '400px' }}\r\n//         />\r\n//       </div>\r\n//       </div>\r\n//       <ScatterPlot data={data} selectedYear={2022} />\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ScatterPlot from './ScatterPlot';\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(2022); // default year\r\n  const [yearRange, setYearRange] = useState({ min: 1950, max: 2022 }); // you can customize this\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/data')\r\n      .then(response => {\r\n        setData(response.data);\r\n\r\n        // Dynamically calculate min and max years from the dataset\r\n        const years = response.data.map(d => d.year);\r\n        const minYear =  1800 // Math.min(...years);\r\n        const maxYear = 2022 //  Math.max(...years);\r\n        setYearRange({ min: minYear, max: maxYear });\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>GDP vs Pollution Visualization</h1>\r\n\r\n      <div style={{ marginBottom: '30px' }}>\r\n        <label htmlFor=\"yearSlider\">Year: {selectedYear}</label><br />\r\n        <input\r\n          id=\"yearSlider\"\r\n          type=\"range\"\r\n          min={yearRange.min}\r\n          max={yearRange.max}\r\n          value={selectedYear}\r\n          onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n          style={{ width: '400px' }}\r\n        />\r\n      </div>\r\n\r\n      <ScatterPlot data={data} selectedYear={selectedYear} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}