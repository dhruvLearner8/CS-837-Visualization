{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ScatterPlot from './ScatterPlot';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regionList = ['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America'];\nconst regionColorMap = {};\nregionList.forEach((region, i) => {\n  regionColorMap[region] = d3.schemeTableau10[i]; // Use d3 color scheme\n});\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(2022);\n  const [yearRange, setYearRange] = useState({\n    min: 1950,\n    max: 2022\n  });\n  const [activeRegions, setActiveRegions] = useState([]); // All regions visible initially\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const startAnimation = () => {\n    if (!isPlaying) {\n      const id = setInterval(() => {\n        setSelectedYear(prev => {\n          const nextYear = prev + 1;\n          return nextYear > yearRange.max ? yearRange.min : nextYear;\n        });\n      }, 100); // change speed if needed\n      setIntervalId(id);\n      setIsPlaying(true);\n    }\n  };\n  const stopAnimation = () => {\n    clearInterval(intervalId);\n    setIsPlaying(false);\n  };\n  const toggleAnimation = () => {\n    isPlaying ? stopAnimation() : startAnimation();\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n      const years = response.data.map(d => d.year);\n      const minYear = 1800;\n      const maxYear = 2022;\n      setYearRange({\n        min: minYear,\n        max: maxYear\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  // Toggle region visibility\n  const toggleRegion = region => {\n    setActiveRegions(prev => prev.includes(region) ? prev.filter(r => r !== region) : [...prev, region]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GDP vs Pollution Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(ScatterPlot, {\n          data: data,\n          selectedYear: selectedYear,\n          regionColorMap: regionColorMap,\n          activeRegions: activeRegions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '40px',\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: regionList.map(region => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: activeRegions.includes(region),\n              onChange: () => toggleRegion(region),\n              style: {\n                marginRight: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '14px',\n                height: '14px',\n                borderRadius: '50%',\n                backgroundColor: regionColorMap[region],\n                marginRight: '6px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 11\n            }, this)]\n          }, region, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yearSlider\",\n        children: [\"Year: \", selectedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"yearSlider\",\n        type: \"range\",\n        min: yearRange.min,\n        max: yearRange.max,\n        value: selectedYear,\n        onChange: e => setSelectedYear(parseInt(e.target.value)),\n        style: {\n          width: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAnimation,\n        children: isPlaying ? 'Pause ⏸️' : 'Play ▶️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Q7SDIQ/kh82fJq9Bn2aAgoROOOs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","ScatterPlot","d3","jsxDEV","_jsxDEV","regionList","regionColorMap","forEach","region","i","schemeTableau10","Home","_s","data","setData","selectedYear","setSelectedYear","yearRange","setYearRange","min","max","activeRegions","setActiveRegions","isPlaying","setIsPlaying","intervalId","setIntervalId","startAnimation","id","setInterval","prev","nextYear","stopAnimation","clearInterval","toggleAnimation","get","then","response","years","map","d","year","minYear","maxYear","catch","error","console","toggleRegion","includes","filter","r","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","marginTop","flex","marginLeft","width","alignItems","marginBottom","type","checked","onChange","marginRight","height","borderRadius","backgroundColor","htmlFor","value","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/Home.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ScatterPlot from './ScatterPlot';\r\nimport * as d3 from 'd3';\r\n\r\nconst regionList = ['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America'];\r\n\r\n\r\n\r\n\r\nconst regionColorMap = {};\r\nregionList.forEach((region, i) => {\r\n  regionColorMap[region] = d3.schemeTableau10[i]; // Use d3 color scheme\r\n});\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(2022);\r\n  const [yearRange, setYearRange] = useState({ min: 1950, max: 2022 });\r\n  const [activeRegions, setActiveRegions] = useState([]); // All regions visible initially\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n\r\n\r\n  const startAnimation = () => {\r\n    if (!isPlaying) {\r\n      const id = setInterval(() => {\r\n        setSelectedYear(prev => {\r\n          const nextYear = prev + 1;\r\n          return nextYear > yearRange.max ? yearRange.min : nextYear;\r\n        });\r\n      }, 100); // change speed if needed\r\n      setIntervalId(id);\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n  \r\n  const stopAnimation = () => {\r\n    clearInterval(intervalId);\r\n    setIsPlaying(false);\r\n  };\r\n  \r\n  const toggleAnimation = () => {\r\n    isPlaying ? stopAnimation() : startAnimation();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/data')\r\n      .then(response => {\r\n        setData(response.data);\r\n\r\n        const years = response.data.map(d => d.year);\r\n        const minYear = 1800;\r\n        const maxYear = 2022;\r\n        setYearRange({ min: minYear, max: maxYear });\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error));\r\n\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n  }, []);\r\n\r\n  // Toggle region visibility\r\n  const toggleRegion = (region) => {\r\n    setActiveRegions(prev =>\r\n      prev.includes(region)\r\n        ? prev.filter(r => r !== region)\r\n        : [...prev, region]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>GDP vs Pollution Visualization</h1>\r\n\r\n      <div style={{ display: 'flex', marginTop: '20px' }}>\r\n  {/* Chart on the left */}\r\n  <div style={{ flex: 1 }}>\r\n    <ScatterPlot\r\n      data={data}\r\n      selectedYear={selectedYear}\r\n      regionColorMap={regionColorMap}\r\n      activeRegions={activeRegions}\r\n    />\r\n  </div>\r\n\r\n  {/* Legend on the right */}\r\n  <div style={{ marginLeft: '40px', width: '200px' }}>\r\n    <h4>Regions</h4>\r\n    <form>\r\n      {regionList.map(region => (\r\n        <label key={region} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={activeRegions.includes(region)}\r\n            onChange={() => toggleRegion(region)}\r\n            style={{ marginRight: '8px' }}\r\n          />\r\n          <div style={{\r\n            width: '14px',\r\n            height: '14px',\r\n            borderRadius: '50%',\r\n            backgroundColor: regionColorMap[region],\r\n            marginRight: '6px'\r\n          }}></div>\r\n          <span>{region}</span>\r\n        </label>\r\n      ))}\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n   \r\n\r\n<div style={{ marginBottom: '30px' }}>\r\n        <label htmlFor=\"yearSlider\">Year: {selectedYear}</label><br />\r\n        <input\r\n          id=\"yearSlider\"\r\n          type=\"range\"\r\n          min={yearRange.min}\r\n          max={yearRange.max}\r\n          value={selectedYear}\r\n          onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n          style={{ width: '400px' }}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n  <button onClick={toggleAnimation}>\r\n    {isPlaying ? 'Pause ⏸️' : 'Play ▶️'}\r\n  </button>\r\n</div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}