{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\ScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = ({\n  data,\n  selectedYear = 2022,\n  regionColorMap,\n  activeRegions,\n  selectedCountries,\n  setSelectedCountries,\n  zoomMode,\n  setHoveredCountry,\n  setHoverTrendData,\n  setHoverPos,\n  zoomExtent,\n  // ðŸ‘ˆ NEW\n  setZoomExtent\n}) => {\n  _s();\n  const svgRef = useRef();\n  //const [zoomExtent, setZoomExtent] = useState(null);\n  //const [hoveredCountry, setHoveredCountry] = useState(null);\n\n  useEffect(() => {\n    if (!data.length) return;\n    const filteredData = data.filter(d => d.year === selectedYear && d.entity !== 'World' && !d.entity.toLowerCase().includes('income') && d.gdp_per_capita > 0 && d.co2_emissions_per_capita > 0 && d.population > 0);\n    const width = 900;\n    const height = 450;\n    const margin = {\n      top: 40,\n      right: 40,\n      bottom: 60,\n      left: 80\n    };\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const chart = svg.attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Scales\n    let x = d3.scaleLog().domain([50, d3.max(filteredData, d => d.gdp_per_capita || 100000)]).range([0, innerWidth]);\n    let y = d3.scaleLog().domain([0.02, d3.max(filteredData, d => d.co2_emissions_per_capita || 10)]).range([innerHeight, 0]);\n\n    // if (zoomExtent) {\n    //   x = d3.scaleLog()\n    //     .domain([x.invert(zoomExtent[0][0]), x.invert(zoomExtent[1][0])])\n    //     .range([0, innerWidth]);\n\n    //   y = d3.scaleLog()\n    //     .domain([y.invert(zoomExtent[1][1]), y.invert(zoomExtent[0][1])])\n    //     .range([innerHeight, 0]);\n    // }\n\n    if (zoomExtent) {\n      const [x0, y0] = zoomExtent[0];\n      const [x1, y1] = zoomExtent[1];\n\n      // Pad pixel extent by 10px\n      const pad = 20;\n      const paddedX0 = Math.max(x0 - pad, 0);\n      const paddedX1 = Math.min(x1 + pad, innerWidth);\n      const paddedY0 = Math.max(y0 - pad, 0);\n      const paddedY1 = Math.min(y1 + pad, innerHeight);\n      const xStart = x.invert(paddedX0);\n      const xEnd = x.invert(paddedX1);\n      const yStart = y.invert(paddedY1); // y is inverted\n      const yEnd = y.invert(paddedY0);\n      x = d3.scaleLog().domain([xStart, xEnd]).range([0, innerWidth]);\n      y = d3.scaleLog().domain([yStart, yEnd]).range([innerHeight, 0]);\n    }\n\n    // Compute tick values for Y (just major log values)\n    const maxY = d3.max(filteredData, d => d.co2_emissions_per_capita || 10);\n    const yTickValues = [0.1, 1, 5, 10, 30].filter(val => val <= maxY);\n    const xTickValues = [100, 1000, 5000, 20000, 100000];\n\n    // Axes\n    chart.append('g').attr('transform', `translate(0, ${innerHeight})`).call(d3.axisBottom(x).ticks(10, \"~s\")).append('text').attr('x', innerWidth / 2).attr('y', 40).attr('fill', '#000').attr('text-anchor', 'middle').style('font-size', '14px').text('GDP per capita (log scale)');\n\n    // Horizontal Grid Lines (Y-axis)\n    chart.append('g').attr('class', 'grid').call(d3.axisLeft(y).tickValues(yTickValues) // âœ… Only major ticks\n    .tickSize(-innerWidth).tickFormat('') // Hide labels (grid only)\n    ).selectAll('line').attr('stroke', '#ccc').attr('stroke-dasharray', '3 3');\n    chart.append('g')\n    //.call(d3.axisLeft(y).ticks(10, \"~s\"))\n    .call(d3.axisLeft(y).tickValues(yTickValues).tickFormat(d => d.toString())).append('text').attr('transform', 'rotate(-90)').attr('x', -innerHeight / 2).attr('y', -60).attr('fill', '#000').attr('text-anchor', 'middle').style('font-size', '14px').text('COâ‚‚ emissions per capita in Tonnes (log scale)');\n    chart.selectAll('.grid path.domain').remove();\n    chart.append('g').attr('class', 'x-grid').attr('transform', `translate(0, ${innerHeight})`).call(d3.axisBottom(x).tickValues(xTickValues).tickSize(-innerHeight) // Full-height vertical lines\n    .tickFormat('') // No text labels\n    ).selectAll('line').attr('stroke', '#ccc').attr('stroke-dasharray', '3 3');\n    chart.selectAll('.x-grid path.domain').remove();\n    // Bubbles\n    chart.selectAll('circle.bubble').data(filteredData).enter().append('circle').attr('class', 'bubble').attr('cx', d => x(d.gdp_per_capita)).attr('cy', d => y(d.co2_emissions_per_capita)).attr('r', d => {\n      const baseR = Math.sqrt(d.population) / 1000;\n      return selectedCountries.some(c => c.entity === d.entity) ? baseR + 4 : baseR;\n    }).attr('fill', d => {\n      if (selectedCountries.some(c => c.entity === d.entity)) {\n        return d3.color(regionColorMap[d.region]).brighter(0.5);\n      }\n      return activeRegions.includes(d.region) ? regionColorMap[d.region] || '#000' : '#ccc';\n    }).attr('stroke', d => selectedCountries.some(c => c.entity === d.entity) ? regionColorMap[d.region] : 'none').attr('stroke-width', d => selectedCountries.some(c => c.entity === d.entity) ? 3 : 0).attr('opacity', 0.85).on('mouseover', function (event, d) {\n      if (!zoomMode) {\n        setHoveredCountry(d);\n        // setHoverTrendData(d.entity);\n        setHoveredCountry(d);\n        // setHoverPos({ x: event.pageX + 10, y: event.pageY - 28 });\n        const svgRect = svgRef.current.getBoundingClientRect();\n        setHoverPos({\n          x: event.clientX - svgRect.left + 10,\n          y: event.clientY - svgRect.top - 28\n        });\n        d3.select(this).attr('stroke', regionColorMap[d.region]).attr('stroke-width', 3).attr('fill', d3.color(regionColorMap[d.region]).brighter(0.5)).attr('r', Math.sqrt(d.population) / 1000 + 4);\n      }\n    }).on('mouseout', function (event, d) {\n      setHoveredCountry(null);\n      const baseR = Math.sqrt(d.population) / 1000;\n      const isSelected = selectedCountries.some(c => c.entity === d.entity);\n      d3.select(this).attr('r', isSelected ? baseR + 4 : baseR).attr('stroke', isSelected ? regionColorMap[d.region] : 'none').attr('stroke-width', isSelected ? 3 : 0).attr('fill', () => {\n        if (isSelected) {\n          return d3.color(regionColorMap[d.region]).brighter(0.5);\n        }\n        return activeRegions.includes(d.region) ? regionColorMap[d.region] || '#000' : '#ccc';\n      });\n    }).on('click', function (event, d) {\n      if (!zoomMode) {\n        event.stopPropagation();\n        // const isAlreadySelected = selectedCountries.some(c => c.entity === d.entity);\n        // const updated = isAlreadySelected\n        //   ? selectedCountries.filter(c => c.entity !== d.entity)\n        //   : [...selectedCountries, d];\n        // setSelectedCountries(updated);\n        const isAlreadySelected = selectedCountries.some(c => c.entity === d.entity);\n        if (isAlreadySelected) {\n          // Deselect country\n          setSelectedCountries(prev => prev.filter(c => c.entity !== d.entity));\n        } else {\n          // Select country only if less than 3 selected\n          if (selectedCountries.length < 3) {\n            setSelectedCountries(prev => [...prev, d]);\n          } else {\n            alert('You can only compare up to 3 countries.');\n          }\n        }\n      }\n    });\n\n    // Labels\n    chart.selectAll('text.label').remove();\n    chart.selectAll('text.label').data(filteredData.filter(d => activeRegions.includes(d.region) || selectedCountries.some(c => c.entity === d.entity))).enter().append('text').attr('class', 'label').attr('x', d => x(d.gdp_per_capita)).attr('y', d => y(d.co2_emissions_per_capita) - 8).text(d => d.entity).attr('font-size', '10px').attr('fill', d => regionColorMap[d.region] || '#333').attr('font-weight', 'bold').attr('text-anchor', 'middle');\n\n    // Only enable brush if zoom mode is on\n    if (zoomMode) {\n      const brush = d3.brush().extent([[0, 0], [innerWidth, innerHeight]]).on(\"end\", ({\n        selection\n      }) => {\n        if (selection) {\n          setZoomExtent(selection);\n        }\n      });\n      chart.append(\"g\").attr(\"class\", \"brush\").call(brush);\n    }\n  }, [data, selectedYear, activeRegions, regionColorMap, selectedCountries, zoomExtent, zoomMode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ScatterPlot, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","ScatterPlot","data","selectedYear","regionColorMap","activeRegions","selectedCountries","setSelectedCountries","zoomMode","setHoveredCountry","setHoverTrendData","setHoverPos","zoomExtent","setZoomExtent","_s","svgRef","length","filteredData","filter","d","year","entity","toLowerCase","includes","gdp_per_capita","co2_emissions_per_capita","population","width","height","margin","top","right","bottom","left","svg","select","current","selectAll","remove","chart","attr","append","innerWidth","innerHeight","x","scaleLog","domain","max","range","y","x0","y0","x1","y1","pad","paddedX0","Math","paddedX1","min","paddedY0","paddedY1","xStart","invert","xEnd","yStart","yEnd","maxY","yTickValues","val","xTickValues","call","axisBottom","ticks","style","text","axisLeft","tickValues","tickSize","tickFormat","toString","enter","baseR","sqrt","some","c","color","region","brighter","on","event","svgRect","getBoundingClientRect","clientX","clientY","isSelected","stopPropagation","isAlreadySelected","prev","alert","brush","extent","selection","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/ScatterPlot.js"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst ScatterPlot = ({\r\n  data,\r\n  selectedYear = 2022,\r\n  regionColorMap,\r\n  activeRegions,\r\n  selectedCountries,\r\n  setSelectedCountries,\r\n  zoomMode,\r\n  setHoveredCountry,         \r\n  setHoverTrendData  ,\r\n  setHoverPos,\r\n  zoomExtent,        // ðŸ‘ˆ NEW\r\n  setZoomExtent \r\n}) => {\r\n  const svgRef = useRef();\r\n  //const [zoomExtent, setZoomExtent] = useState(null);\r\n  //const [hoveredCountry, setHoveredCountry] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (!data.length) return;\r\n\r\n    const filteredData = data.filter(d =>\r\n      d.year === selectedYear &&\r\n      d.entity !== 'World' &&\r\n      !d.entity.toLowerCase().includes('income') &&\r\n      d.gdp_per_capita > 0 &&\r\n      d.co2_emissions_per_capita > 0 &&\r\n      d.population > 0\r\n    );\r\n\r\n    const width = 900;\r\n    const height = 450;\r\n    const margin = { top: 40, right: 40, bottom: 60, left: 80 };\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n\r\n    const chart = svg\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n// Scales\r\nlet x = d3.scaleLog()\r\n  .domain([50, d3.max(filteredData, d => d.gdp_per_capita || 100000)])\r\n  .range([0, innerWidth]);\r\n\r\nlet y = d3.scaleLog()\r\n  .domain([0.02, d3.max(filteredData, d => d.co2_emissions_per_capita  || 10)])\r\n  .range([innerHeight, 0]);\r\n\r\n// if (zoomExtent) {\r\n//   x = d3.scaleLog()\r\n//     .domain([x.invert(zoomExtent[0][0]), x.invert(zoomExtent[1][0])])\r\n//     .range([0, innerWidth]);\r\n\r\n//   y = d3.scaleLog()\r\n//     .domain([y.invert(zoomExtent[1][1]), y.invert(zoomExtent[0][1])])\r\n//     .range([innerHeight, 0]);\r\n// }\r\n\r\nif (zoomExtent) {\r\n  const [x0, y0] = zoomExtent[0];\r\n  const [x1, y1] = zoomExtent[1];\r\n\r\n  // Pad pixel extent by 10px\r\n  const pad = 20;\r\n  const paddedX0 = Math.max(x0 - pad, 0);\r\n  const paddedX1 = Math.min(x1 + pad, innerWidth);\r\n  const paddedY0 = Math.max(y0 - pad, 0);\r\n  const paddedY1 = Math.min(y1 + pad, innerHeight);\r\n\r\n  const xStart = x.invert(paddedX0);\r\n  const xEnd = x.invert(paddedX1);\r\n  const yStart = y.invert(paddedY1); // y is inverted\r\n  const yEnd = y.invert(paddedY0);\r\n\r\n  x = d3.scaleLog()\r\n    .domain([xStart, xEnd])\r\n    .range([0, innerWidth]);\r\n\r\n  y = d3.scaleLog()\r\n    .domain([yStart, yEnd])\r\n    .range([innerHeight, 0]);\r\n}\r\n\r\n\r\n\r\n// Compute tick values for Y (just major log values)\r\nconst maxY = d3.max(filteredData, d => d.co2_emissions_per_capita || 10);\r\nconst yTickValues = [0.1, 1,5, 10, 30].filter(val => val <= maxY);\r\nconst xTickValues = [100, 1_000, 5_000, 20_000, 100_000];\r\n\r\n\r\n// Axes\r\nchart.append('g')\r\n  .attr('transform', `translate(0, ${innerHeight})`)\r\n  .call(d3.axisBottom(x).ticks(10, \"~s\"))\r\n  .append('text')\r\n  .attr('x', innerWidth / 2)\r\n  .attr('y', 40)\r\n  .attr('fill', '#000')\r\n  .attr('text-anchor', 'middle')\r\n  .style('font-size', '14px')\r\n  .text('GDP per capita (log scale)');\r\n\r\n// Horizontal Grid Lines (Y-axis)\r\nchart.append('g')\r\n  .attr('class', 'grid')\r\n  .call(d3.axisLeft(y)\r\n    .tickValues(yTickValues)        // âœ… Only major ticks\r\n    .tickSize(-innerWidth)\r\n    .tickFormat('')                 // Hide labels (grid only)\r\n  )\r\n  .selectAll('line')\r\n  .attr('stroke', '#ccc')\r\n  .attr('stroke-dasharray', '3 3');\r\n\r\n\r\n    chart.append('g')\r\n      //.call(d3.axisLeft(y).ticks(10, \"~s\"))\r\n      .call(d3.axisLeft(y)\r\n  .tickValues(yTickValues)\r\n  .tickFormat(d => d.toString())\r\n)\r\n      .append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -innerHeight / 2)\r\n      .attr('y', -60)\r\n      .attr('fill', '#000')\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '14px')\r\n      .text('COâ‚‚ emissions per capita in Tonnes (log scale)');\r\n\r\n      chart.selectAll('.grid path.domain').remove();\r\n\r\n      chart.append('g')\r\n  .attr('class', 'x-grid')\r\n  .attr('transform', `translate(0, ${innerHeight})`)\r\n  .call(\r\n    d3.axisBottom(x)\r\n    .tickValues(xTickValues)\r\n      .tickSize(-innerHeight)   // Full-height vertical lines\r\n      .tickFormat('')           // No text labels\r\n  )\r\n  .selectAll('line')\r\n  \r\n  .attr('stroke', '#ccc')\r\n  .attr('stroke-dasharray', '3 3');\r\n  chart.selectAll('.x-grid path.domain').remove();\r\n    // Bubbles\r\n    chart.selectAll('circle.bubble')\r\n      .data(filteredData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'bubble')\r\n      .attr('cx', d => x(d.gdp_per_capita))\r\n      .attr('cy', d => y(d.co2_emissions_per_capita))\r\n      .attr('r', d => {\r\n        const baseR = Math.sqrt(d.population) / 1000;\r\n        return selectedCountries.some(c => c.entity === d.entity) ? baseR + 4 : baseR;\r\n      })\r\n      .attr('fill', d => {\r\n        if (selectedCountries.some(c => c.entity === d.entity)) {\r\n          return d3.color(regionColorMap[d.region]).brighter(0.5);\r\n        }\r\n        return activeRegions.includes(d.region)\r\n          ? regionColorMap[d.region] || '#000'\r\n          : '#ccc';\r\n      })\r\n      .attr('stroke', d =>\r\n        selectedCountries.some(c => c.entity === d.entity)\r\n          ? regionColorMap[d.region]\r\n          : 'none'\r\n      )\r\n      .attr('stroke-width', d =>\r\n        selectedCountries.some(c => c.entity === d.entity) ? 3 : 0\r\n      )\r\n      .attr('opacity', 0.85)\r\n      .on('mouseover', function (event, d) {\r\n        if (!zoomMode) {\r\n          setHoveredCountry(d);\r\n // setHoverTrendData(d.entity);\r\n          setHoveredCountry(d);\r\n         // setHoverPos({ x: event.pageX + 10, y: event.pageY - 28 });\r\n         const svgRect = svgRef.current.getBoundingClientRect();\r\n         setHoverPos({\r\n           x: event.clientX - svgRect.left + 10,\r\n           y: event.clientY - svgRect.top - 28\r\n         });\r\n          d3.select(this)\r\n            .attr('stroke', regionColorMap[d.region])\r\n            .attr('stroke-width', 3)\r\n            .attr('fill', d3.color(regionColorMap[d.region]).brighter(0.5))\r\n            .attr('r', Math.sqrt(d.population) / 1000 + 4);\r\n        }\r\n      })\r\n      .on('mouseout', function (event, d) {\r\n        setHoveredCountry(null);\r\n\r\n        const baseR = Math.sqrt(d.population) / 1000;\r\n        const isSelected = selectedCountries.some(c => c.entity === d.entity);\r\n\r\n        d3.select(this)\r\n          .attr('r', isSelected ? baseR + 4 : baseR)\r\n          .attr('stroke', isSelected ? regionColorMap[d.region] : 'none')\r\n          .attr('stroke-width', isSelected ? 3 : 0)\r\n          .attr('fill', () => {\r\n            if (isSelected) {\r\n              return d3.color(regionColorMap[d.region]).brighter(0.5);\r\n            }\r\n            return activeRegions.includes(d.region)\r\n              ? regionColorMap[d.region] || '#000'\r\n              : '#ccc';\r\n          });\r\n      })\r\n      .on('click', function (event, d) {\r\n        if (!zoomMode) {\r\n          event.stopPropagation();\r\n          // const isAlreadySelected = selectedCountries.some(c => c.entity === d.entity);\r\n          // const updated = isAlreadySelected\r\n          //   ? selectedCountries.filter(c => c.entity !== d.entity)\r\n          //   : [...selectedCountries, d];\r\n          // setSelectedCountries(updated);\r\n          const isAlreadySelected = selectedCountries.some(c => c.entity === d.entity);\r\n\r\nif (isAlreadySelected) {\r\n  // Deselect country\r\n  setSelectedCountries(prev => prev.filter(c => c.entity !== d.entity));\r\n} else {\r\n  // Select country only if less than 3 selected\r\n  if (selectedCountries.length < 3) {\r\n    setSelectedCountries(prev => [...prev, d]);\r\n  } else {\r\n    alert('You can only compare up to 3 countries.');\r\n  }\r\n}\r\n\r\n        }\r\n      });\r\n\r\n    // Labels\r\n    chart.selectAll('text.label').remove();\r\n    chart.selectAll('text.label')\r\n      .data(filteredData.filter(d =>\r\n        activeRegions.includes(d.region) ||\r\n        selectedCountries.some(c => c.entity === d.entity)\r\n      ))\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', d => x(d.gdp_per_capita))\r\n      .attr('y', d => y(d.co2_emissions_per_capita) - 8)\r\n      .text(d => d.entity)\r\n      .attr('font-size', '10px')\r\n      .attr('fill', d => regionColorMap[d.region] || '#333')\r\n      .attr('font-weight', 'bold')\r\n      .attr('text-anchor', 'middle');\r\n\r\n    // Only enable brush if zoom mode is on\r\n    if (zoomMode) {\r\n      const brush = d3.brush()\r\n        .extent([[0, 0], [innerWidth, innerHeight]])\r\n        .on(\"end\", ({ selection }) => {\r\n          if (selection) {\r\n            setZoomExtent(selection);\r\n          }\r\n        });\r\n\r\n      chart.append(\"g\")\r\n        .attr(\"class\", \"brush\")\r\n        .call(brush);\r\n    }\r\n\r\n  }, [data, selectedYear, activeRegions, regionColorMap, selectedCountries, zoomExtent, zoomMode]);\r\n\r\n  return (\r\n    <>\r\n      <svg ref={svgRef}></svg>\r\n\r\n      {/* { !zoomMode && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          left: `${hoverPos.x}px`,\r\n          top: `${hoverPos.y}px`,\r\n          background: '#fff',\r\n          padding: '10px',\r\n          border: '1px solid #ccc',\r\n          borderRadius: '6px',\r\n          boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\r\n          zIndex: 100,\r\n          pointerEvents: 'none'\r\n        }}>\r\n          <strong>{hoveredCountry.entity}</strong><br />\r\n          Year: {hoveredCountry.year}<br />\r\n          GDP per capita: ${Math.round(hoveredCountry.gdp_per_capita)}<br />\r\n          COâ‚‚ per capita: {hoveredCountry.co2_emissions_per_capita.toFixed(2)} t<br />\r\n          Population: {hoveredCountry.population.toLocaleString()}\r\n        </div>\r\n      )} */}\r\n\r\n      {/* {zoomExtent && (\r\n        <div style={{ marginTop: '10px' }}>\r\n          <button onClick={() => setZoomExtent(null)}>ðŸ”„ Reset Zoom</button>\r\n        </div>\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScatterPlot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}