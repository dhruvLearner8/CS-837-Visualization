{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\MiniTrendChart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiniTrendChart = ({\n  country,\n  data,\n  color\n}) => {\n  const width = 160;\n  const height = 80;\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 20,\n    left: 30\n  };\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n\n  // Guard: skip if no data\n  if (!data || data.length === 0) return null;\n\n  // Extract values\n  const years = data.map(d => d.year);\n  const values = data.map(d => d.co2);\n\n  // Scales\n  const xScale = year => (year - years[0]) / (years[years.length - 1] - years[0]) * innerWidth;\n  const maxVal = Math.max(...values);\n  const minVal = Math.min(...values);\n  const yScale = val => innerHeight - (val - minVal) / (maxVal - minVal || 1) * innerHeight;\n\n  // Generate line path\n  const linePath = data.map((d, i) => {\n    const x = xScale(d.year) + margin.left;\n    const y = yScale(d.co2) + margin.top;\n    return `${i === 0 ? 'M' : 'L'} ${x},${y}`;\n  }).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '12px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: margin.left,\n        y1: innerHeight + margin.top,\n        x2: width - margin.right,\n        y2: innerHeight + margin.top,\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: linePath,\n        fill: \"none\",\n        stroke: color,\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: xScale(data[data.length - 1].year) + margin.left,\n        cy: yScale(data[data.length - 1].co2) + margin.top,\n        r: 3,\n        fill: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '4px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"CO\\u2082 emissions trend (t/person)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = MiniTrendChart;\nexport default MiniTrendChart;\nvar _c;\n$RefreshReg$(_c, \"MiniTrendChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MiniTrendChart","country","data","color","width","height","margin","top","right","bottom","left","innerWidth","innerHeight","length","years","map","d","year","values","co2","xScale","maxVal","Math","max","minVal","min","yScale","val","linePath","i","x","y","join","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","stroke","fill","strokeWidth","cx","cy","r","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/MiniTrendChart.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst MiniTrendChart = ({ country, data, color }) => {\r\n  const width = 160;\r\n  const height = 80;\r\n  const margin = { top: 10, right: 10, bottom: 20, left: 30 };\r\n\r\n  const innerWidth = width - margin.left - margin.right;\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n\r\n  // Guard: skip if no data\r\n  if (!data || data.length === 0) return null;\r\n\r\n  // Extract values\r\n  const years = data.map(d => d.year);\r\n  const values = data.map(d => d.co2);\r\n\r\n  // Scales\r\n  const xScale = (year) =>\r\n    ((year - years[0]) / (years[years.length - 1] - years[0])) * innerWidth;\r\n\r\n  const maxVal = Math.max(...values);\r\n  const minVal = Math.min(...values);\r\n\r\n  const yScale = (val) =>\r\n    innerHeight - ((val - minVal) / (maxVal - minVal || 1)) * innerHeight;\r\n\r\n  // Generate line path\r\n  const linePath = data\r\n    .map((d, i) => {\r\n      const x = xScale(d.year) + margin.left;\r\n      const y = yScale(d.co2) + margin.top;\r\n      return `${i === 0 ? 'M' : 'L'} ${x},${y}`;\r\n    })\r\n    .join(' ');\r\n\r\n  return (\r\n    <div style={{ fontSize: '12px' }}>\r\n      <strong>{country}</strong>\r\n      <svg width={width} height={height}>\r\n        {/* Axis line */}\r\n        <line\r\n          x1={margin.left}\r\n          y1={innerHeight + margin.top}\r\n          x2={width - margin.right}\r\n          y2={innerHeight + margin.top}\r\n          stroke=\"#ccc\"\r\n        />\r\n\r\n        {/* Line path */}\r\n        <path\r\n          d={linePath}\r\n          fill=\"none\"\r\n          stroke={color}\r\n          strokeWidth=\"2\"\r\n        />\r\n\r\n        {/* Optional: Latest dot */}\r\n        <circle\r\n          cx={xScale(data[data.length - 1].year) + margin.left}\r\n          cy={yScale(data[data.length - 1].co2) + margin.top}\r\n          r={3}\r\n          fill={color}\r\n        />\r\n      </svg>\r\n      <div style={{ marginTop: '4px' }}>\r\n        <span>COâ‚‚ emissions trend (t/person)</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniTrendChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACnD,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,MAAM,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAE3D,MAAMC,UAAU,GAAGP,KAAK,GAAGE,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;EACrD,MAAMI,WAAW,GAAGP,MAAM,GAAGC,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;;EAEvD;EACA,IAAI,CAACP,IAAI,IAAIA,IAAI,CAACW,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;;EAE3C;EACA,MAAMC,KAAK,GAAGZ,IAAI,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;EACnC,MAAMC,MAAM,GAAGhB,IAAI,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,GAAG,CAAC;;EAEnC;EACA,MAAMC,MAAM,GAAIH,IAAI,IACjB,CAACA,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAACA,KAAK,CAACD,MAAM,GAAG,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAIH,UAAU;EAEzE,MAAMU,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGL,MAAM,CAAC;EAClC,MAAMM,MAAM,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGP,MAAM,CAAC;EAElC,MAAMQ,MAAM,GAAIC,GAAG,IACjBf,WAAW,GAAI,CAACe,GAAG,GAAGH,MAAM,KAAKH,MAAM,GAAGG,MAAM,IAAI,CAAC,CAAC,GAAIZ,WAAW;;EAEvE;EACA,MAAMgB,QAAQ,GAAG1B,IAAI,CAClBa,GAAG,CAAC,CAACC,CAAC,EAAEa,CAAC,KAAK;IACb,MAAMC,CAAC,GAAGV,MAAM,CAACJ,CAAC,CAACC,IAAI,CAAC,GAAGX,MAAM,CAACI,IAAI;IACtC,MAAMqB,CAAC,GAAGL,MAAM,CAACV,CAAC,CAACG,GAAG,CAAC,GAAGb,MAAM,CAACC,GAAG;IACpC,OAAO,GAAGsB,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAIC,CAAC,IAAIC,CAAC,EAAE;EAC3C,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC;EAEZ,oBACEjC,OAAA;IAAKkC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC/BpC,OAAA;MAAAoC,QAAA,EAASlC;IAAO;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC1BxC,OAAA;MAAKK,KAAK,EAAEA,KAAM;MAACC,MAAM,EAAEA,MAAO;MAAA8B,QAAA,gBAEhCpC,OAAA;QACEyC,EAAE,EAAElC,MAAM,CAACI,IAAK;QAChB+B,EAAE,EAAE7B,WAAW,GAAGN,MAAM,CAACC,GAAI;QAC7BmC,EAAE,EAAEtC,KAAK,GAAGE,MAAM,CAACE,KAAM;QACzBmC,EAAE,EAAE/B,WAAW,GAAGN,MAAM,CAACC,GAAI;QAC7BqC,MAAM,EAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eAGFxC,OAAA;QACEiB,CAAC,EAAEY,QAAS;QACZiB,IAAI,EAAC,MAAM;QACXD,MAAM,EAAEzC,KAAM;QACd2C,WAAW,EAAC;MAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eAGFxC,OAAA;QACEgD,EAAE,EAAE3B,MAAM,CAAClB,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,GAAGX,MAAM,CAACI,IAAK;QACrDsC,EAAE,EAAEtB,MAAM,CAACxB,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACM,GAAG,CAAC,GAAGb,MAAM,CAACC,GAAI;QACnD0C,CAAC,EAAE,CAAE;QACLJ,IAAI,EAAE1C;MAAM;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxC,OAAA;MAAKkC,KAAK,EAAE;QAAEiB,SAAS,EAAE;MAAM,CAAE;MAAAf,QAAA,eAC/BpC,OAAA;QAAAoC,QAAA,EAAM;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACY,EAAA,GApEInD,cAAc;AAsEpB,eAAeA,cAAc;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}