{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\MultiTrendCharts.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartWidth = 220;\nconst chartHeight = 130;\nconst margin = {\n  top: 20,\n  right: 10,\n  bottom: 24,\n  left: 42\n};\nconst metrics = [{\n  key: 'co2',\n  label: 'CO₂ per Capita (t)'\n}, {\n  key: 'gdp',\n  label: 'GDP per Capita ($)'\n}, {\n  key: 'population',\n  label: 'Population'\n}];\nconst MultiTrendCharts = ({\n  selectedCountries,\n  trendMap,\n  regionColorMap\n}) => {\n  if (selectedCountries.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '40px',\n      marginTop: '30px'\n    },\n    children: selectedCountries.map(country => {\n      const data = (trendMap[country.entity] || []).filter(d => d.year >= 1850);\n      const years = data.map(d => d.year);\n      const xScale = d3.scaleLinear().domain(d3.extent(years)).range([margin.left, chartWidth - margin.right]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 'bold',\n            marginBottom: '10px',\n            textAlign: 'center'\n          },\n          children: country.entity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), metrics.map(metric => {\n          const filtered = data.filter(d => d[metric.key] !== null && d[metric.key] > 0);\n          if (filtered.length === 0) return null;\n          const yMax = d3.max(filtered, d => d[metric.key]);\n          const yScale = d3.scaleLinear().domain([0, yMax]).nice().range([chartHeight - margin.bottom, margin.top]);\n          const line = d3.line().x(d => xScale(d.year)).y(d => yScale(d[metric.key]));\n          return /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: chartWidth,\n            height: chartHeight,\n            style: {\n              display: 'block',\n              marginBottom: '14px'\n            },\n            children: [yScale.ticks(3).map((tick, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                x: margin.left - 6,\n                y: yScale(tick),\n                fontSize: \"10\",\n                textAnchor: \"end\",\n                alignmentBaseline: \"middle\",\n                fill: \"#444\",\n                children: tick.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: margin.left,\n                x2: chartWidth - margin.right,\n                y1: yScale(tick),\n                y2: yScale(tick),\n                stroke: \"#ccc\",\n                strokeDasharray: \"2 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this)]\n            }, `y-${i}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)), xScale.ticks(3).map((tick, i) => /*#__PURE__*/_jsxDEV(\"text\", {\n              x: xScale(tick),\n              y: chartHeight - 4,\n              fontSize: \"10\",\n              textAnchor: \"middle\",\n              fill: \"#666\",\n              children: tick\n            }, `x-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: chartWidth / 2,\n              y: 12,\n              textAnchor: \"middle\",\n              fontSize: \"11\",\n              fill: \"#333\",\n              children: metric.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: line(filtered),\n              fill: \"none\",\n              stroke: regionColorMap[country.region] || '#000',\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, metric.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this);\n        })]\n      }, country.entity, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = MultiTrendCharts;\nexport default MultiTrendCharts;\nvar _c;\n$RefreshReg$(_c, \"MultiTrendCharts\");","map":{"version":3,"names":["React","d3","jsxDEV","_jsxDEV","chartWidth","chartHeight","margin","top","right","bottom","left","metrics","key","label","MultiTrendCharts","selectedCountries","trendMap","regionColorMap","length","style","display","gap","marginTop","children","map","country","data","entity","filter","d","year","years","xScale","scaleLinear","domain","extent","range","fontWeight","marginBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","metric","filtered","yMax","max","yScale","nice","line","x","y","width","height","ticks","tick","i","fontSize","textAnchor","alignmentBaseline","fill","toLocaleString","x1","x2","y1","y2","stroke","strokeDasharray","region","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/MultiTrendCharts.js"],"sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst chartWidth = 220;\r\nconst chartHeight = 130;\r\nconst margin = { top: 20, right: 10, bottom: 24, left: 42 };\r\n\r\nconst metrics = [\r\n  { key: 'co2', label: 'CO₂ per Capita (t)' },\r\n  { key: 'gdp', label: 'GDP per Capita ($)' },\r\n  { key: 'population', label: 'Population' }\r\n];\r\n\r\nconst MultiTrendCharts = ({ selectedCountries, trendMap, regionColorMap }) => {\r\n  if (selectedCountries.length === 0) return null;\r\n\r\n  return (\r\n    <div style={{ display: 'flex', gap: '40px', marginTop: '30px' }}>\r\n      {selectedCountries.map(country => {\r\n        const data = (trendMap[country.entity] || []).filter(d => d.year >= 1850);\r\n        const years = data.map(d => d.year);\r\n        const xScale = d3.scaleLinear()\r\n          .domain(d3.extent(years))\r\n          .range([margin.left, chartWidth - margin.right]);\r\n\r\n        return (\r\n          <div key={country.entity}>\r\n            <div style={{ fontWeight: 'bold', marginBottom: '10px', textAlign: 'center' }}>\r\n              {country.entity}\r\n            </div>\r\n\r\n            {metrics.map(metric => {\r\n              const filtered = data.filter(d => d[metric.key] !== null && d[metric.key] > 0);\r\n              if (filtered.length === 0) return null;\r\n\r\n              const yMax = d3.max(filtered, d => d[metric.key]);\r\n              const yScale = d3.scaleLinear()\r\n                .domain([0, yMax])\r\n                .nice()\r\n                .range([chartHeight - margin.bottom, margin.top]);\r\n\r\n              const line = d3.line()\r\n                .x(d => xScale(d.year))\r\n                .y(d => yScale(d[metric.key]));\r\n\r\n              return (\r\n                <svg\r\n                  key={metric.key}\r\n                  width={chartWidth}\r\n                  height={chartHeight}\r\n                  style={{ display: 'block', marginBottom: '14px' }}\r\n                >\r\n                  {/* Y Axis Grid & Labels */}\r\n                  {yScale.ticks(3).map((tick, i) => (\r\n                    <g key={`y-${i}`}>\r\n                      <text\r\n                        x={margin.left - 6}\r\n                        y={yScale(tick)}\r\n                        fontSize=\"10\"\r\n                        textAnchor=\"end\"\r\n                        alignmentBaseline=\"middle\"\r\n                        fill=\"#444\"\r\n                      >\r\n                        {tick.toLocaleString()}\r\n                      </text>\r\n                      <line\r\n                        x1={margin.left}\r\n                        x2={chartWidth - margin.right}\r\n                        y1={yScale(tick)}\r\n                        y2={yScale(tick)}\r\n                        stroke=\"#ccc\"\r\n                        strokeDasharray=\"2 2\"\r\n                      />\r\n                    </g>\r\n                  ))}\r\n\r\n                  {/* X Axis Labels */}\r\n                  {xScale.ticks(3).map((tick, i) => (\r\n                    <text\r\n                      key={`x-${i}`}\r\n                      x={xScale(tick)}\r\n                      y={chartHeight - 4}\r\n                      fontSize=\"10\"\r\n                      textAnchor=\"middle\"\r\n                      fill=\"#666\"\r\n                    >\r\n                      {tick}\r\n                    </text>\r\n                  ))}\r\n\r\n                  {/* Title */}\r\n                  <text\r\n                    x={chartWidth / 2}\r\n                    y={12}\r\n                    textAnchor=\"middle\"\r\n                    fontSize=\"11\"\r\n                    fill=\"#333\"\r\n                  >\r\n                    {metric.label}\r\n                  </text>\r\n\r\n                  {/* Line Path */}\r\n                  <path\r\n                    d={line(filtered)}\r\n                    fill=\"none\"\r\n                    stroke={regionColorMap[country.region] || '#000'}\r\n                    strokeWidth={2}\r\n                  />\r\n                </svg>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiTrendCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}