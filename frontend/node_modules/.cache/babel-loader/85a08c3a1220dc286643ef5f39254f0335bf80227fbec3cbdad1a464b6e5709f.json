{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\MultiTrendCharts.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartWidth = 220;\nconst chartHeight = 120;\nconst margin = {\n  top: 20,\n  right: 10,\n  bottom: 24,\n  left: 45\n};\nconst metrics = [{\n  key: 'co2',\n  label: 'CO₂ per Capita (t)'\n}, {\n  key: 'gdp',\n  label: 'GDP per Capita ($)'\n}, {\n  key: 'population',\n  label: 'Population'\n}];\nconst formatYAxis = (value, key) => {\n  if (key === 'population') {\n    return d3.format('.2s')(value).replace('G', 'B');\n  } else if (key === 'gdp') {\n    return d3.format(',')(value);\n  } else {\n    return value.toFixed(2);\n  }\n};\nconst MultiTrendCharts = ({\n  selectedCountries,\n  trendMap,\n  regionColorMap\n}) => {\n  if (selectedCountries.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '30px',\n      marginTop: '20px'\n    },\n    children: selectedCountries.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '6px',\n          fontWeight: 'bold'\n        },\n        children: country.entity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), metrics.map(metric => {\n        const allData = trendMap[country.entity] || [];\n        const filteredData = allData.filter(d => d.year >= 1850 && d[metric.key] != null && d[metric.key] > 0);\n        if (filteredData.length === 0) return null;\n        const xScale = d3.scaleLinear().domain(d3.extent(filteredData, d => d.year)).range([margin.left, chartWidth - margin.right]);\n        const yScale = d3.scaleLinear().domain([0, d3.max(filteredData, d => d[metric.key])]).nice().range([chartHeight - margin.bottom, margin.top]);\n        const line = d3.line().x(d => xScale(d.year)).y(d => yScale(d[metric.key])).defined(d => d[metric.key] != null); // Only defined points\n\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: chartWidth,\n          height: chartHeight,\n          style: {\n            display: 'block',\n            marginBottom: '12px'\n          },\n          children: [yScale.ticks(3).map((tick, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n              x: margin.left - 6,\n              y: yScale(tick),\n              fontSize: \"10\",\n              textAnchor: \"end\",\n              alignmentBaseline: \"middle\",\n              fill: \"#444\",\n              children: formatYAxis(tick, metric.key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: margin.left,\n              x2: chartWidth - margin.right,\n              y1: yScale(tick),\n              y2: yScale(tick),\n              stroke: \"#ccc\",\n              strokeDasharray: \"2 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)), xScale.ticks(4).map((tick, i) => /*#__PURE__*/_jsxDEV(\"text\", {\n            x: xScale(tick),\n            y: chartHeight - 6,\n            fontSize: \"10\",\n            textAnchor: \"middle\",\n            fill: \"#666\",\n            children: tick\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: chartWidth / 2,\n            y: 14,\n            textAnchor: \"middle\",\n            fontSize: \"11\",\n            fill: \"#333\",\n            children: metric.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: line(filteredData),\n            fill: \"none\",\n            stroke: regionColorMap[country.region] || '#000',\n            strokeWidth: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, metric.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this);\n      })]\n    }, country.entity, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = MultiTrendCharts;\nexport default MultiTrendCharts;\nvar _c;\n$RefreshReg$(_c, \"MultiTrendCharts\");","map":{"version":3,"names":["React","d3","jsxDEV","_jsxDEV","chartWidth","chartHeight","margin","top","right","bottom","left","metrics","key","label","formatYAxis","value","format","replace","toFixed","MultiTrendCharts","selectedCountries","trendMap","regionColorMap","length","style","display","gap","marginTop","children","map","country","marginBottom","fontWeight","entity","fileName","_jsxFileName","lineNumber","columnNumber","metric","allData","filteredData","filter","d","year","xScale","scaleLinear","domain","extent","range","yScale","max","nice","line","x","y","defined","width","height","ticks","tick","i","fontSize","textAnchor","alignmentBaseline","fill","x1","x2","y1","y2","stroke","strokeDasharray","region","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/MultiTrendCharts.js"],"sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst chartWidth = 220;\r\nconst chartHeight = 120;\r\nconst margin = { top: 20, right: 10, bottom: 24, left: 45 };\r\n\r\nconst metrics = [\r\n  { key: 'co2', label: 'CO₂ per Capita (t)' },\r\n  { key: 'gdp', label: 'GDP per Capita ($)' },\r\n  { key: 'population', label: 'Population' }\r\n];\r\n\r\nconst formatYAxis = (value, key) => {\r\n  if (key === 'population') {\r\n    return d3.format('.2s')(value).replace('G', 'B');\r\n  } else if (key === 'gdp') {\r\n    return d3.format(',')(value);\r\n  } else {\r\n    return value.toFixed(2);\r\n  }\r\n};\r\n\r\nconst MultiTrendCharts = ({ selectedCountries, trendMap, regionColorMap }) => {\r\n  if (selectedCountries.length === 0) return null;\r\n\r\n  return (\r\n    <div style={{ display: 'flex', gap: '30px', marginTop: '20px' }}>\r\n      {selectedCountries.map((country) => (\r\n        <div key={country.entity}>\r\n          <div style={{ marginBottom: '6px', fontWeight: 'bold' }}>\r\n            {country.entity}\r\n          </div>\r\n\r\n          {metrics.map((metric) => {\r\n            const allData = trendMap[country.entity] || [];\r\n\r\n            const filteredData = allData.filter(\r\n              d => d.year >= 1850 && d[metric.key] != null && d[metric.key] > 0\r\n            );\r\n\r\n            if (filteredData.length === 0) return null;\r\n\r\n            const xScale = d3.scaleLinear()\r\n              .domain(d3.extent(filteredData, d => d.year))\r\n              .range([margin.left, chartWidth - margin.right]);\r\n\r\n            const yScale = d3.scaleLinear()\r\n              .domain([0, d3.max(filteredData, d => d[metric.key])])\r\n              .nice()\r\n              .range([chartHeight - margin.bottom, margin.top]);\r\n\r\n            const line = d3.line()\r\n              .x(d => xScale(d.year))\r\n              .y(d => yScale(d[metric.key]))\r\n              .defined(d => d[metric.key] != null);  // Only defined points\r\n\r\n            return (\r\n              <svg\r\n                key={metric.key}\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                style={{ display: 'block', marginBottom: '12px' }}\r\n              >\r\n                {/* Y Axis Grid + Labels */}\r\n                {yScale.ticks(3).map((tick, i) => (\r\n                  <g key={i}>\r\n                    <text\r\n                      x={margin.left - 6}\r\n                      y={yScale(tick)}\r\n                      fontSize=\"10\"\r\n                      textAnchor=\"end\"\r\n                      alignmentBaseline=\"middle\"\r\n                      fill=\"#444\"\r\n                    >\r\n                      {formatYAxis(tick, metric.key)}\r\n                    </text>\r\n                    <line\r\n                      x1={margin.left}\r\n                      x2={chartWidth - margin.right}\r\n                      y1={yScale(tick)}\r\n                      y2={yScale(tick)}\r\n                      stroke=\"#ccc\"\r\n                      strokeDasharray=\"2 2\"\r\n                    />\r\n                  </g>\r\n                ))}\r\n\r\n                {/* X Axis Years */}\r\n                {xScale.ticks(4).map((tick, i) => (\r\n                  <text\r\n                    key={i}\r\n                    x={xScale(tick)}\r\n                    y={chartHeight - 6}\r\n                    fontSize=\"10\"\r\n                    textAnchor=\"middle\"\r\n                    fill=\"#666\"\r\n                  >\r\n                    {tick}\r\n                  </text>\r\n                ))}\r\n\r\n                {/* Metric Label */}\r\n                <text\r\n                  x={chartWidth / 2}\r\n                  y={14}\r\n                  textAnchor=\"middle\"\r\n                  fontSize=\"11\"\r\n                  fill=\"#333\"\r\n                >\r\n                  {metric.label}\r\n                </text>\r\n\r\n                {/* Trend Line */}\r\n                <path\r\n                  d={line(filteredData)}\r\n                  fill=\"none\"\r\n                  stroke={regionColorMap[country.region] || '#000'}\r\n                  strokeWidth={2}\r\n                />\r\n              </svg>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiTrendCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}