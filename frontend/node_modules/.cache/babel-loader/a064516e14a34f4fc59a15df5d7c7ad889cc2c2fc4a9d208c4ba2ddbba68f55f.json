{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\ScatterPlot.js\",\n  _s = $RefreshSig$();\n// export default ScatterPlot;\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = ({\n  data,\n  selectedYear = 2022,\n  regionColorMap,\n  activeRegions,\n  selectedCountries,\n  setSelectedCountries\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [hoveredCountry, setHoveredCountry] = useState(null);\n  const [hoverPos, setHoverPos] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!data.length) return;\n    const filteredData = data.filter(d => d.year === selectedYear && d.entity !== 'World' && !d.entity.toLowerCase().includes('income') && d.gdp_per_capita > 0 && d.co2_emissions_per_capita > 0 && d.population > 0);\n    const width = 900;\n    const height = 550;\n    const margin = {\n      top: 40,\n      right: 40,\n      bottom: 60,\n      left: 80\n    };\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const chart = svg.attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // const xScale = d3.scaleLog()\n    //   .domain([100, d3.max(filteredData, d => d.gdp_per_capita || 100000)])\n    //   .range([0, innerWidth]);\n\n    // const yScale = d3.scaleLog()\n    //   .domain([0.1, d3.max(filteredData, d => d.co2_emissions_per_capita || 10)])\n    //   .range([innerHeight, 0]);\n\n    // Filtered data based on active region (for axis zooming)\n    const visibleData = activeRegions.length > 0 ? filteredData.filter(d => activeRegions.includes(d.region)) : filteredData;\n\n    // X & Y axis scale domains based on visible data\n    const xMin = d3.min(visibleData, d => d.gdp_per_capita || 100);\n    const xMax = d3.max(visibleData, d => d.gdp_per_capita || 100000);\n    const yMin = d3.min(visibleData, d => d.co2_emissions_per_capita || 0.1);\n    const yMax = d3.max(visibleData, d => d.co2_emissions_per_capita || 10);\n    const xScale = d3.scaleLog().domain([Math.max(100, xMin), xMax]).range([0, innerWidth]).nice();\n    const yScale = d3.scaleLog().domain([Math.max(0.1, yMin), yMax]).range([innerHeight, 0]).nice();\n    chart.append('g').attr('transform', `translate(0, ${innerHeight})`).call(d3.axisBottom(xScale).ticks(10, \"~s\")).append('text').attr('x', innerWidth / 2).attr('y', 40).attr('fill', '#000').attr('text-anchor', 'middle').text('GDP per capita (log scale)');\n    chart.append('g').call(d3.axisLeft(yScale).ticks(10, \"~s\")).append('text').attr('transform', 'rotate(-90)').attr('x', -innerHeight / 2).attr('y', -60).attr('fill', '#000').attr('text-anchor', 'middle').text('COâ‚‚ emissions per capita (log scale)');\n\n    // RING CIRCLES\n    chart.selectAll('circle.ring').data(filteredData.filter(d => activeRegions.includes(d.region))).enter().append('circle').attr('class', 'ring').attr('cx', d => xScale(d.gdp_per_capita || 100)).attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1)).attr('r', d => Math.sqrt(d.population) / 1000 + 4).attr('fill', 'none').attr('stroke', d => regionColorMap[d.region] || '#000').attr('stroke-width', 2).attr('opacity', 1);\n\n    // MAIN CIRCLES\n    chart.selectAll('circle.bubble').data(filteredData).enter().append('circle').attr('class', 'bubble').attr('cx', d => xScale(d.gdp_per_capita || 100)).attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1)).attr('r', d => {\n      const baseR = Math.sqrt(d.population) / 1000;\n      return selectedCountries.some(c => c.entity === d.entity) ? baseR + 4 : baseR;\n    }).attr('fill', d => {\n      if (selectedCountries.some(c => c.entity === d.entity)) {\n        return d3.color(regionColorMap[d.region]).brighter(0.5);\n      }\n      return activeRegions.includes(d.region) ? regionColorMap[d.region] || '#000' : '#ccc';\n    }).attr('stroke', d => selectedCountries.some(c => c.entity === d.entity) ? regionColorMap[d.region] : 'none').attr('stroke-width', d => selectedCountries.some(c => c.entity === d.entity) ? 3 : 0).attr('opacity', 0.85).on('mouseover', function (event, d) {\n      setHoveredCountry(d);\n      setHoverPos({\n        x: event.pageX + 10,\n        y: event.pageY - 28\n      });\n      d3.select(this).attr('stroke', regionColorMap[d.region] || '#000').attr('stroke-width', 3).attr('fill', d3.color(regionColorMap[d.region]).brighter(0.5)).attr('r', Math.sqrt(d.population) / 1000 + 4);\n    }).on('mouseout', function (event, d) {\n      setHoveredCountry(null);\n      const baseR = Math.sqrt(d.population) / 1000;\n      const isSelected = selectedCountries.some(c => c.entity === d.entity);\n      d3.select(this).attr('r', isSelected ? baseR + 4 : baseR).attr('stroke', isSelected ? regionColorMap[d.region] : 'none').attr('stroke-width', isSelected ? 3 : 0).attr('fill', () => {\n        if (isSelected) {\n          return d3.color(regionColorMap[d.region]).brighter(0.5);\n        }\n        return activeRegions.includes(d.region) ? regionColorMap[d.region] || '#000' : '#ccc';\n      });\n    }).on('click', function (event, d) {\n      event.stopPropagation();\n      const isAlreadySelected = selectedCountries.some(c => c.entity === d.entity);\n      const updated = isAlreadySelected ? selectedCountries.filter(c => c.entity !== d.entity) : [...selectedCountries, d];\n      setSelectedCountries(updated);\n    });\n\n    // Labels for selected countries only\n    chart.selectAll('text.label').remove();\n    chart.selectAll('text.label').data(filteredData.filter(d => activeRegions.includes(d.region) || selectedCountries.some(c => c.entity === d.entity))).enter().append('text').attr('class', 'label').attr('x', d => xScale(d.gdp_per_capita || 100)).attr('y', d => yScale(d.co2_emissions_per_capita || 0.1) - 8).text(d => d.entity).attr('font-size', '10px').attr('fill', d => regionColorMap[d.region] || '#333').attr('font-weight', 'bold').attr('text-anchor', 'middle');\n  }, [data, selectedYear, activeRegions, regionColorMap, selectedCountries]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), hoveredCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: `${hoverPos.x}px`,\n        top: `${hoverPos.y}px`,\n        background: '#fff',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: '6px',\n        boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n        zIndex: 100,\n        pointerEvents: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: hoveredCountry.entity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 51\n      }, this), \"Year: \", hoveredCountry.year, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 38\n      }, this), \"GDP per capita: $\", Math.round(hoveredCountry.gdp_per_capita), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 71\n      }, this), \"CO\\u2082 per capita: \", hoveredCountry.co2_emissions_per_capita.toFixed(2), \" t\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 81\n      }, this), \"Population: \", hoveredCountry.population.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ScatterPlot, \"V2l1pUwYEBvqG1IJLP8DpMp96wE=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","ScatterPlot","data","selectedYear","regionColorMap","activeRegions","selectedCountries","setSelectedCountries","_s","svgRef","hoveredCountry","setHoveredCountry","hoverPos","setHoverPos","x","y","length","filteredData","filter","d","year","entity","toLowerCase","includes","gdp_per_capita","co2_emissions_per_capita","population","width","height","margin","top","right","bottom","left","svg","select","current","selectAll","remove","chart","attr","append","innerWidth","innerHeight","visibleData","region","xMin","min","xMax","max","yMin","yMax","xScale","scaleLog","domain","Math","range","nice","yScale","call","axisBottom","ticks","text","axisLeft","enter","sqrt","baseR","some","c","color","brighter","on","event","pageX","pageY","isSelected","stopPropagation","isAlreadySelected","updated","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","style","position","background","padding","border","borderRadius","boxShadow","zIndex","pointerEvents","round","toFixed","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/ScatterPlot.js"],"sourcesContent":["\r\n\r\n// export default ScatterPlot;\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst ScatterPlot = ({\r\n  data,\r\n  selectedYear = 2022,\r\n  regionColorMap,\r\n  activeRegions,\r\n  selectedCountries,\r\n  setSelectedCountries\r\n}) => {\r\n  const svgRef = useRef();\r\n  const [hoveredCountry, setHoveredCountry] = useState(null);\r\n  const [hoverPos, setHoverPos] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return;\r\n\r\n    const filteredData = data.filter(d =>\r\n      d.year === selectedYear &&\r\n      d.entity !== 'World' &&\r\n      !d.entity.toLowerCase().includes('income') &&\r\n      d.gdp_per_capita > 0 &&\r\n      d.co2_emissions_per_capita > 0 &&\r\n      d.population > 0\r\n    );\r\n\r\n    const width = 900;\r\n    const height = 550;\r\n    const margin = { top: 40, right: 40, bottom: 60, left: 80 };\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n\r\n    const chart = svg\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // const xScale = d3.scaleLog()\r\n    //   .domain([100, d3.max(filteredData, d => d.gdp_per_capita || 100000)])\r\n    //   .range([0, innerWidth]);\r\n\r\n    // const yScale = d3.scaleLog()\r\n    //   .domain([0.1, d3.max(filteredData, d => d.co2_emissions_per_capita || 10)])\r\n    //   .range([innerHeight, 0]);\r\n\r\n    // Filtered data based on active region (for axis zooming)\r\nconst visibleData = activeRegions.length > 0\r\n  ? filteredData.filter(d => activeRegions.includes(d.region))\r\n  : filteredData;\r\n\r\n// X & Y axis scale domains based on visible data\r\nconst xMin = d3.min(visibleData, d => d.gdp_per_capita || 100);\r\nconst xMax = d3.max(visibleData, d => d.gdp_per_capita || 100000);\r\nconst yMin = d3.min(visibleData, d => d.co2_emissions_per_capita || 0.1);\r\nconst yMax = d3.max(visibleData, d => d.co2_emissions_per_capita || 10);\r\n\r\nconst xScale = d3.scaleLog()\r\n  .domain([Math.max(100, xMin), xMax])\r\n  .range([0, innerWidth])\r\n  .nice();\r\n\r\nconst yScale = d3.scaleLog()\r\n  .domain([Math.max(0.1, yMin), yMax])\r\n  .range([innerHeight, 0])\r\n  .nice();\r\n\r\n\r\n    chart.append('g')\r\n      .attr('transform', `translate(0, ${innerHeight})`)\r\n      .call(d3.axisBottom(xScale).ticks(10, \"~s\"))\r\n      .append('text')\r\n      .attr('x', innerWidth / 2)\r\n      .attr('y', 40)\r\n      .attr('fill', '#000')\r\n      .attr('text-anchor', 'middle')\r\n      .text('GDP per capita (log scale)');\r\n\r\n    chart.append('g')\r\n      .call(d3.axisLeft(yScale).ticks(10, \"~s\"))\r\n      .append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -innerHeight / 2)\r\n      .attr('y', -60)\r\n      .attr('fill', '#000')\r\n      .attr('text-anchor', 'middle')\r\n      .text('COâ‚‚ emissions per capita (log scale)');\r\n\r\n    // RING CIRCLES\r\n    chart.selectAll('circle.ring')\r\n      .data(filteredData.filter(d => activeRegions.includes(d.region)))\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'ring')\r\n      .attr('cx', d => xScale(d.gdp_per_capita || 100))\r\n      .attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1))\r\n      .attr('r', d => Math.sqrt(d.population) / 1000 + 4)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => regionColorMap[d.region] || '#000')\r\n      .attr('stroke-width', 2)\r\n      .attr('opacity', 1);\r\n\r\n    // MAIN CIRCLES\r\n    chart.selectAll('circle.bubble')\r\n      .data(filteredData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'bubble')\r\n      .attr('cx', d => xScale(d.gdp_per_capita || 100))\r\n      .attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1))\r\n      .attr('r', d => {\r\n        const baseR = Math.sqrt(d.population) / 1000;\r\n        return selectedCountries.some(c => c.entity === d.entity) ? baseR + 4 : baseR;\r\n      })\r\n      .attr('fill', d => {\r\n        if (selectedCountries.some(c => c.entity === d.entity)) {\r\n          return d3.color(regionColorMap[d.region]).brighter(0.5);\r\n        }\r\n        return activeRegions.includes(d.region)\r\n          ? regionColorMap[d.region] || '#000'\r\n          : '#ccc';\r\n      })\r\n      .attr('stroke', d =>\r\n        selectedCountries.some(c => c.entity === d.entity)\r\n          ? regionColorMap[d.region]\r\n          : 'none'\r\n      )\r\n      .attr('stroke-width', d =>\r\n        selectedCountries.some(c => c.entity === d.entity) ? 3 : 0\r\n      )\r\n      .attr('opacity', 0.85)\r\n      .on('mouseover', function (event, d) {\r\n        setHoveredCountry(d);\r\n        setHoverPos({ x: event.pageX + 10, y: event.pageY - 28 });\r\n\r\n        d3.select(this)\r\n          .attr('stroke', regionColorMap[d.region] || '#000')\r\n          .attr('stroke-width', 3)\r\n          .attr('fill', d3.color(regionColorMap[d.region]).brighter(0.5))\r\n          .attr('r', Math.sqrt(d.population) / 1000 + 4);\r\n      })\r\n      .on('mouseout', function (event, d) {\r\n        setHoveredCountry(null);\r\n\r\n        const baseR = Math.sqrt(d.population) / 1000;\r\n        const isSelected = selectedCountries.some(c => c.entity === d.entity);\r\n\r\n        d3.select(this)\r\n          .attr('r', isSelected ? baseR + 4 : baseR)\r\n          .attr('stroke', isSelected ? regionColorMap[d.region] : 'none')\r\n          .attr('stroke-width', isSelected ? 3 : 0)\r\n          .attr('fill', () => {\r\n            if (isSelected) {\r\n              return d3.color(regionColorMap[d.region]).brighter(0.5);\r\n            }\r\n            return activeRegions.includes(d.region)\r\n              ? regionColorMap[d.region] || '#000'\r\n              : '#ccc';\r\n          });\r\n      })\r\n      .on('click', function (event, d) {\r\n        event.stopPropagation();\r\n        const isAlreadySelected = selectedCountries.some(c => c.entity === d.entity);\r\n        const updated = isAlreadySelected\r\n          ? selectedCountries.filter(c => c.entity !== d.entity)\r\n          : [...selectedCountries, d];\r\n        setSelectedCountries(updated);\r\n      });\r\n\r\n    // Labels for selected countries only\r\n    chart.selectAll('text.label').remove();\r\n\r\n    chart.selectAll('text.label')\r\n      .data(filteredData.filter(d =>\r\n        activeRegions.includes(d.region) || selectedCountries.some(c => c.entity === d.entity)\r\n      ))\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', d => xScale(d.gdp_per_capita || 100))\r\n      .attr('y', d => yScale(d.co2_emissions_per_capita || 0.1) - 8)\r\n      .text(d => d.entity)\r\n      .attr('font-size', '10px')\r\n      .attr('fill', d => regionColorMap[d.region] || '#333')\r\n      .attr('font-weight', 'bold')\r\n      .attr('text-anchor', 'middle');\r\n  }, [data, selectedYear, activeRegions, regionColorMap, selectedCountries]);\r\n\r\n  return (\r\n    <>\r\n      <svg ref={svgRef}></svg>\r\n\r\n      {/* Hover-only tooltip card */}\r\n      {hoveredCountry && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          left: `${hoverPos.x}px`,\r\n          top: `${hoverPos.y}px`,\r\n          background: '#fff',\r\n          padding: '10px',\r\n          border: '1px solid #ccc',\r\n          borderRadius: '6px',\r\n          boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\r\n          zIndex: 100,\r\n          pointerEvents: 'none'\r\n        }}>\r\n          <strong>{hoveredCountry.entity}</strong><br />\r\n          Year: {hoveredCountry.year}<br />\r\n          GDP per capita: ${Math.round(hoveredCountry.gdp_per_capita)}<br />\r\n          COâ‚‚ per capita: {hoveredCountry.co2_emissions_per_capita.toFixed(2)} t<br />\r\n          Population: {hoveredCountry.population.toLocaleString()}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScatterPlot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}