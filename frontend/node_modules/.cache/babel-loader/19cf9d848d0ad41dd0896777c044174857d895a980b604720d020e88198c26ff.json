{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport ScatterPlot from './ScatterPlot';\nimport CountrySelector from './CountrySelector';\nimport MultiTrendCharts from './MultiTrendCharts'; // 👈 NEW\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regionList = ['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America'];\n\n// const regionColorMap = {};\n// regionList.forEach((region, i) => {\n//   regionColorMap[region] = d3.schemeTableau10[i];\n// });\n\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(2022);\n  const [yearRange, setYearRange] = useState({\n    min: 1950,\n    max: 2022\n  });\n  const [activeRegions, setActiveRegions] = useState([]);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showCountrySelector, setShowCountrySelector] = useState(false);\n  const [zoomMode, setZoomMode] = useState(false);\n  const [hoveredCountry, setHoveredCountry] = useState(null);\n  const [hoverPos, setHoverPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoomExtent, setZoomExtent] = useState(null);\n\n  // Expanded trend map with all 3 metrics\n  const countryTrendMap = useMemo(() => {\n    const map = {};\n    data.forEach(d => {\n      if (!map[d.entity]) map[d.entity] = [];\n      map[d.entity].push({\n        year: d.year,\n        co2: d.co2_emissions_per_capita,\n        gdp: d.gdp_per_capita,\n        population: d.population\n      });\n    });\n    return map;\n  }, [data]);\n  const startAnimation = () => {\n    if (!isPlaying) {\n      const id = setInterval(() => {\n        setSelectedYear(prev => {\n          const nextYear = prev + 1;\n          if (nextYear > yearRange.max) {\n            clearInterval(id);\n            setIsPlaying(false);\n            return yearRange.max;\n          }\n          return nextYear;\n        });\n      }, 100);\n      setIntervalId(id);\n      setIsPlaying(true);\n    }\n  };\n  const stopAnimation = () => {\n    clearInterval(intervalId);\n    setIsPlaying(false);\n  };\n  const toggleAnimation = () => {\n    isPlaying ? stopAnimation() : startAnimation();\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n      setYearRange({\n        min: 1800,\n        max: 2022\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n    return () => clearInterval(intervalId);\n  }, []);\n  const toggleRegion = region => {\n    setActiveRegions(prev => prev.includes(region) ? prev.filter(r => r !== region) : [...prev, region]);\n  };\n  const toggleCountry = country => {\n    setSelectedCountries(prev => {\n      const exists = prev.find(c => c.entity === country.entity);\n      if (exists) {\n        // Deselect country\n        return prev.filter(c => c.entity !== country.entity);\n      } else if (prev.length < 3) {\n        // Select new country (if less than 3)\n        return [...prev, country];\n      } else {\n        // Already 3 selected — block selection\n        alert('You can only compare up to 3 countries.');\n        return prev; // no change\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GDP vs Pollution Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px',\n        marginBottom: '20px'\n      },\n      children: regionList.map(region => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: activeRegions.includes(region),\n          onChange: () => toggleRegion(region),\n          style: {\n            appearance: 'none',\n            WebkitAppearance: 'none',\n            width: '18px',\n            height: '18px',\n            borderRadius: '4px',\n            backgroundColor: activeRegions.includes(region) ? regionColorMap[region] : '#fff',\n            border: `2px solid ${regionColorMap[region]}`,\n            marginRight: '8px',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, region, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        display: 'flex',\n        flexDirection: 'row',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoomMode(!zoomMode),\n        style: {\n          padding: '8px 12px',\n          backgroundColor: zoomMode ? '#007bff' : '#ccc',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: zoomMode ? '🧭 Zoom Mode: ON' : '🔍 Enable Zoom Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 3\n      }, this), zoomMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoomExtent(null),\n        style: {\n          padding: '8px 12px',\n          backgroundColor: '#666',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"\\uD83D\\uDD04 Reset Zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCountrySelector(true),\n        children: \"+ Select Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSelectedCountries([]);\n          setActiveRegions([]);\n        },\n        style: {\n          backgroundColor: '#f44336',\n          color: 'white',\n          border: 'none',\n          padding: '8px',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Reset Selections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ScatterPlot, {\n          data: data,\n          selectedYear: selectedYear,\n          regionColorMap: regionColorMap,\n          activeRegions: activeRegions,\n          selectedCountries: selectedCountries,\n          setSelectedCountries: setSelectedCountries,\n          zoomMode: zoomMode,\n          setHoveredCountry: setHoveredCountry,\n          setHoverPos: setHoverPos,\n          zoomExtent: zoomExtent // 👈 Pass zoom extent\n          ,\n          setZoomExtent: setZoomExtent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            width: '800px',\n            margin: '30px auto 20px auto',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleAnimation,\n            style: {\n              width: '40px',\n              padding: '8px',\n              fontSize: '14px',\n              color: 'grey',\n              border: '1px solid #999',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: isPlaying ? '❚❚' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: yearRange.min,\n            max: yearRange.max,\n            value: selectedYear,\n            onChange: e => setSelectedYear(parseInt(e.target.value)),\n            style: {\n              flex: 1,\n              height: '6px',\n              background: '#ccc',\n              borderRadius: '3px',\n              appearance: 'none',\n              WebkitAppearance: 'none',\n              outline: 'none',\n              cursor: 'pointer',\n              accentColor: 'grey'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            fontSize: '16px',\n            marginBottom: '10px',\n            color: '#444'\n          },\n          children: [\"Year: \", selectedYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexShrink: 0,\n          paddingLeft: '16px'\n        },\n        children: selectedCountries.length > 0 && /*#__PURE__*/_jsxDEV(MultiTrendCharts, {\n          selectedCountries: selectedCountries,\n          trendMap: countryTrendMap,\n          regionColorMap: regionColorMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), !zoomMode && hoveredCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: `${hoverPos.x}px`,\n          top: `${hoverPos.y}px`,\n          background: '#fff',\n          padding: '10px',\n          border: '1px solid #ccc',\n          borderRadius: '6px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n          zIndex: 100,\n          pointerEvents: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: hoveredCountry.entity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 53\n        }, this), \"Year: \", hoveredCountry.year, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 40\n        }, this), \"GDP per capita: $\", Math.round(hoveredCountry.gdp_per_capita), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 73\n        }, this), \"CO\\u2082 per capita: \", hoveredCountry.co2_emissions_per_capita.toFixed(2), \" t\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 83\n        }, this), \"Population: \", hoveredCountry.population.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), showCountrySelector && /*#__PURE__*/_jsxDEV(CountrySelector, {\n      data: data,\n      selectedCountries: selectedCountries,\n      toggleCountry: toggleCountry,\n      close: () => setShowCountrySelector(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"JGUBQlRO5uO4m4rXHNEMAFuw9o4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","ScatterPlot","CountrySelector","MultiTrendCharts","d3","jsxDEV","_jsxDEV","regionList","Home","_s","data","setData","selectedYear","setSelectedYear","yearRange","setYearRange","min","max","activeRegions","setActiveRegions","selectedCountries","setSelectedCountries","isPlaying","setIsPlaying","intervalId","setIntervalId","showCountrySelector","setShowCountrySelector","zoomMode","setZoomMode","hoveredCountry","setHoveredCountry","hoverPos","setHoverPos","x","y","zoomExtent","setZoomExtent","countryTrendMap","map","forEach","d","entity","push","year","co2","co2_emissions_per_capita","gdp","gdp_per_capita","population","startAnimation","id","setInterval","prev","nextYear","clearInterval","stopAnimation","toggleAnimation","get","then","response","catch","error","console","toggleRegion","region","includes","filter","r","toggleCountry","country","exists","find","c","length","alert","style","padding","position","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","gap","marginBottom","alignItems","cursor","type","checked","onChange","appearance","WebkitAppearance","width","height","borderRadius","backgroundColor","regionColorMap","border","marginRight","marginTop","flexDirection","onClick","color","flex","justifyContent","margin","fontSize","value","e","parseInt","target","background","outline","accentColor","textAlign","flexShrink","paddingLeft","trendMap","left","top","boxShadow","zIndex","pointerEvents","Math","round","toFixed","toLocaleString","close","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport ScatterPlot from './ScatterPlot';\r\nimport CountrySelector from './CountrySelector';\r\nimport MultiTrendCharts from './MultiTrendCharts'; // 👈 NEW\r\nimport * as d3 from 'd3';\r\n\r\nconst regionList = ['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America'];\r\n\r\n// const regionColorMap = {};\r\n// regionList.forEach((region, i) => {\r\n//   regionColorMap[region] = d3.schemeTableau10[i];\r\n// });\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(2022);\r\n  const [yearRange, setYearRange] = useState({ min: 1950, max: 2022 });\r\n  const [activeRegions, setActiveRegions] = useState([]);\r\n  const [selectedCountries, setSelectedCountries] = useState([]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [showCountrySelector, setShowCountrySelector] = useState(false);\r\n  const [zoomMode, setZoomMode] = useState(false);\r\n  const [hoveredCountry, setHoveredCountry] = useState(null);\r\n  const [hoverPos, setHoverPos] = useState({ x: 0, y: 0 });\r\n  const [zoomExtent, setZoomExtent] = useState(null);\r\n\r\n\r\n  // Expanded trend map with all 3 metrics\r\n  const countryTrendMap = useMemo(() => {\r\n    const map = {};\r\n    data.forEach(d => {\r\n      if (!map[d.entity]) map[d.entity] = [];\r\n      map[d.entity].push({\r\n        year: d.year,\r\n        co2: d.co2_emissions_per_capita,\r\n        gdp: d.gdp_per_capita,\r\n        population: d.population\r\n      });\r\n    });\r\n    return map;\r\n  }, [data]);\r\n\r\n  const startAnimation = () => {\r\n    if (!isPlaying) {\r\n      const id = setInterval(() => {\r\n        setSelectedYear(prev => {\r\n          const nextYear = prev + 1;\r\n          if (nextYear > yearRange.max) {\r\n            clearInterval(id);\r\n            setIsPlaying(false);\r\n            return yearRange.max;\r\n          }\r\n          return nextYear;\r\n        });\r\n      }, 100);\r\n      setIntervalId(id);\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  const stopAnimation = () => {\r\n    clearInterval(intervalId);\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  const toggleAnimation = () => {\r\n    isPlaying ? stopAnimation() : startAnimation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/data')\r\n      .then(response => {\r\n        setData(response.data);\r\n        setYearRange({ min: 1800, max: 2022 });\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error));\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const toggleRegion = (region) => {\r\n    setActiveRegions(prev =>\r\n      prev.includes(region)\r\n        ? prev.filter(r => r !== region)\r\n        : [...prev, region]\r\n    );\r\n  };\r\n  const toggleCountry = (country) => {\r\n    setSelectedCountries(prev => {\r\n      const exists = prev.find(c => c.entity === country.entity);\r\n      \r\n      if (exists) {\r\n        // Deselect country\r\n        return prev.filter(c => c.entity !== country.entity);\r\n      } else if (prev.length < 3) {\r\n        // Select new country (if less than 3)\r\n        return [...prev, country];\r\n      } else {\r\n        // Already 3 selected — block selection\r\n        alert('You can only compare up to 3 countries.');\r\n        return prev; // no change\r\n      }\r\n    });\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div style={{ padding: '20px', position: 'relative' }}>\r\n      <h1>GDP vs Pollution Visualization</h1>\r\n\r\n      {/* Horizontal Legend */}\r\n      <div style={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        gap: '20px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        {regionList.map(region => (\r\n          <label key={region} style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={activeRegions.includes(region)}\r\n              onChange={() => toggleRegion(region)}\r\n              style={{\r\n                appearance: 'none',\r\n                WebkitAppearance: 'none',\r\n                width: '18px',\r\n                height: '18px',\r\n                borderRadius: '4px',\r\n                backgroundColor: activeRegions.includes(region)\r\n                  ? regionColorMap[region]\r\n                  : '#fff',\r\n                border: `2px solid ${regionColorMap[region]}`,\r\n                marginRight: '8px',\r\n                cursor: 'pointer'\r\n              }}\r\n            />\r\n            <span>{region}</span>\r\n          </label>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div style={{ marginTop: '20px', display: 'flex', flexDirection: 'row', gap: '10px' }}>\r\n  {/* Zoom Mode Toggle */}\r\n  <button\r\n    onClick={() => setZoomMode(!zoomMode)}\r\n    style={{\r\n      padding: '8px 12px',\r\n      backgroundColor: zoomMode ? '#007bff' : '#ccc',\r\n      color: '#fff',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer'\r\n    }}\r\n  >\r\n    {zoomMode ? '🧭 Zoom Mode: ON' : '🔍 Enable Zoom Mode'}\r\n  </button>\r\n\r\n  {/* ✅ Show reset zoom button if zoom is active */}\r\n  {zoomMode && (\r\n    <button\r\n      onClick={() => setZoomExtent(null)}\r\n      style={{\r\n        padding: '8px 12px',\r\n        backgroundColor: '#666',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer'\r\n      }}\r\n    >\r\n      🔄 Reset Zoom\r\n    </button>\r\n  )}\r\n\r\n  {/* Select countries */}\r\n  <button onClick={() => setShowCountrySelector(true)}>+ Select Countries</button>\r\n\r\n  {/* Reset selections */}\r\n  <button\r\n    onClick={() => {\r\n      setSelectedCountries([]);\r\n      setActiveRegions([]);\r\n    }}\r\n    style={{\r\n      backgroundColor: '#f44336',\r\n      color: 'white',\r\n      border: 'none',\r\n      padding: '8px',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer'\r\n    }}\r\n  >\r\n    Reset Selections\r\n  </button>\r\n</div>\r\n\r\n\r\n     \r\n      <div style={{ display: 'flex' }}>\r\n      <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n          <ScatterPlot\r\n            data={data}\r\n            selectedYear={selectedYear}\r\n            regionColorMap={regionColorMap}\r\n            activeRegions={activeRegions}\r\n            selectedCountries={selectedCountries}\r\n            setSelectedCountries={setSelectedCountries}\r\n            zoomMode={zoomMode}\r\n            setHoveredCountry={setHoveredCountry}\r\n            setHoverPos={setHoverPos}\r\n            zoomExtent={zoomExtent}              // 👈 Pass zoom extent\r\n            setZoomExtent={setZoomExtent} \r\n          />\r\n\r\n        \r\n          <div style={{\r\n            display: 'flex',\r\n          \r\n            justifyContent: 'flex-start',\r\n            width: '800px',\r\n            margin: '30px auto 20px auto',\r\n            gap: '10px'\r\n          }}>  \r\n            <button\r\n              onClick={toggleAnimation}\r\n              style={{\r\n                width: '40px',\r\n                padding: '8px',\r\n                fontSize: '14px',\r\n                color: 'grey',\r\n                border: '1px solid #999',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              {isPlaying ? '❚❚' : '▶'}\r\n            </button>\r\n\r\n            <input\r\n              type=\"range\"\r\n              min={yearRange.min}\r\n              max={yearRange.max}\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n              style={{\r\n                flex: 1,\r\n                height: '6px',\r\n                background: '#ccc',\r\n                borderRadius: '3px',\r\n                appearance: 'none',\r\n                WebkitAppearance: 'none',\r\n                outline: 'none',\r\n                cursor: 'pointer',\r\n                accentColor: 'grey'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center', fontSize: '16px', marginBottom: '10px', color: '#444' }}>\r\n            Year: {selectedYear}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Panel: Mini Trend Charts */}\r\n        <div style={{ flexShrink: 0, paddingLeft: '16px' }}>\r\n          {selectedCountries.length > 0 && (\r\n            <MultiTrendCharts\r\n              selectedCountries={selectedCountries}\r\n              trendMap={countryTrendMap}\r\n              regionColorMap={regionColorMap}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Hover Card */}\r\n        {!zoomMode && hoveredCountry && (\r\n          <div style={{\r\n            position: 'absolute',\r\n            left: `${hoverPos.x}px`,\r\n            top: `${hoverPos.y}px`,\r\n            background: '#fff',\r\n            padding: '10px',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '6px',\r\n            boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\r\n            zIndex: 100,\r\n            pointerEvents: 'none'\r\n          }}>\r\n            <strong>{hoveredCountry.entity}</strong><br />\r\n            Year: {hoveredCountry.year}<br />\r\n            GDP per capita: ${Math.round(hoveredCountry.gdp_per_capita)}<br />\r\n            CO₂ per capita: {hoveredCountry.co2_emissions_per_capita.toFixed(2)} t<br />\r\n            Population: {hoveredCountry.population.toLocaleString()}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Country Selector Panel */}\r\n      {showCountrySelector && (\r\n        <CountrySelector\r\n          data={data}\r\n          selectedCountries={selectedCountries}\r\n          toggleCountry={toggleCountry}\r\n          close={() => setShowCountrySelector(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;AACnD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,eAAe,CAAC;;AAE5F;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC,CAAC;EACpE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC6B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC;IAAEqC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACxD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;;EAGlD;EACA,MAAMyC,eAAe,GAAGvC,OAAO,CAAC,MAAM;IACpC,MAAMwC,GAAG,GAAG,CAAC,CAAC;IACd7B,IAAI,CAAC8B,OAAO,CAACC,CAAC,IAAI;MAChB,IAAI,CAACF,GAAG,CAACE,CAAC,CAACC,MAAM,CAAC,EAAEH,GAAG,CAACE,CAAC,CAACC,MAAM,CAAC,GAAG,EAAE;MACtCH,GAAG,CAACE,CAAC,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC;QACjBC,IAAI,EAAEH,CAAC,CAACG,IAAI;QACZC,GAAG,EAAEJ,CAAC,CAACK,wBAAwB;QAC/BC,GAAG,EAAEN,CAAC,CAACO,cAAc;QACrBC,UAAU,EAAER,CAAC,CAACQ;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOV,GAAG;EACZ,CAAC,EAAE,CAAC7B,IAAI,CAAC,CAAC;EAEV,MAAMwC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC5B,SAAS,EAAE;MACd,MAAM6B,EAAE,GAAGC,WAAW,CAAC,MAAM;QAC3BvC,eAAe,CAACwC,IAAI,IAAI;UACtB,MAAMC,QAAQ,GAAGD,IAAI,GAAG,CAAC;UACzB,IAAIC,QAAQ,GAAGxC,SAAS,CAACG,GAAG,EAAE;YAC5BsC,aAAa,CAACJ,EAAE,CAAC;YACjB5B,YAAY,CAAC,KAAK,CAAC;YACnB,OAAOT,SAAS,CAACG,GAAG;UACtB;UACA,OAAOqC,QAAQ;QACjB,CAAC,CAAC;MACJ,CAAC,EAAE,GAAG,CAAC;MACP7B,aAAa,CAAC0B,EAAE,CAAC;MACjB5B,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMiC,aAAa,GAAGA,CAAA,KAAM;IAC1BD,aAAa,CAAC/B,UAAU,CAAC;IACzBD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMkC,eAAe,GAAGA,CAAA,KAAM;IAC5BnC,SAAS,GAAGkC,aAAa,CAAC,CAAC,GAAGN,cAAc,CAAC,CAAC;EAChD,CAAC;EAEDpD,SAAS,CAAC,MAAM;IACdE,KAAK,CAAC0D,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAI;MAChBjD,OAAO,CAACiD,QAAQ,CAAClD,IAAI,CAAC;MACtBK,YAAY,CAAC;QAAEC,GAAG,EAAE,IAAI;QAAEC,GAAG,EAAE;MAAK,CAAC,CAAC;IACxC,CAAC,CAAC,CACD4C,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IAE/D,OAAO,MAAMP,aAAa,CAAC/B,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwC,YAAY,GAAIC,MAAM,IAAK;IAC/B9C,gBAAgB,CAACkC,IAAI,IACnBA,IAAI,CAACa,QAAQ,CAACD,MAAM,CAAC,GACjBZ,IAAI,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKH,MAAM,CAAC,GAC9B,CAAC,GAAGZ,IAAI,EAAEY,MAAM,CACtB,CAAC;EACH,CAAC;EACD,MAAMI,aAAa,GAAIC,OAAO,IAAK;IACjCjD,oBAAoB,CAACgC,IAAI,IAAI;MAC3B,MAAMkB,MAAM,GAAGlB,IAAI,CAACmB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/B,MAAM,KAAK4B,OAAO,CAAC5B,MAAM,CAAC;MAE1D,IAAI6B,MAAM,EAAE;QACV;QACA,OAAOlB,IAAI,CAACc,MAAM,CAACM,CAAC,IAAIA,CAAC,CAAC/B,MAAM,KAAK4B,OAAO,CAAC5B,MAAM,CAAC;MACtD,CAAC,MAAM,IAAIW,IAAI,CAACqB,MAAM,GAAG,CAAC,EAAE;QAC1B;QACA,OAAO,CAAC,GAAGrB,IAAI,EAAEiB,OAAO,CAAC;MAC3B,CAAC,MAAM;QACL;QACAK,KAAK,CAAC,yCAAyC,CAAC;QAChD,OAAOtB,IAAI,CAAC,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC;EAID,oBACE/C,OAAA;IAAKsE,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBACpDzE,OAAA;MAAAyE,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvC7E,OAAA;MAAKsE,KAAK,EAAE;QACVQ,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM;QAChBC,GAAG,EAAE,MAAM;QACXC,YAAY,EAAE;MAChB,CAAE;MAAAR,QAAA,EACCxE,UAAU,CAACgC,GAAG,CAAC0B,MAAM,iBACpB3D,OAAA;QAAoBsE,KAAK,EAAE;UAAEQ,OAAO,EAAE,MAAM;UAAEI,UAAU,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAU,CAAE;QAAAV,QAAA,gBACtFzE,OAAA;UACEoF,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEzE,aAAa,CAACgD,QAAQ,CAACD,MAAM,CAAE;UACxC2B,QAAQ,EAAEA,CAAA,KAAM5B,YAAY,CAACC,MAAM,CAAE;UACrCW,KAAK,EAAE;YACLiB,UAAU,EAAE,MAAM;YAClBC,gBAAgB,EAAE,MAAM;YACxBC,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,eAAe,EAAEhF,aAAa,CAACgD,QAAQ,CAACD,MAAM,CAAC,GAC3CkC,cAAc,CAAClC,MAAM,CAAC,GACtB,MAAM;YACVmC,MAAM,EAAE,aAAaD,cAAc,CAAClC,MAAM,CAAC,EAAE;YAC7CoC,WAAW,EAAE,KAAK;YAClBZ,MAAM,EAAE;UACV;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF7E,OAAA;UAAAyE,QAAA,EAAOd;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAnBXlB,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBX,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN7E,OAAA;MAAKsE,KAAK,EAAE;QAAE0B,SAAS,EAAE,MAAM;QAAElB,OAAO,EAAE,MAAM;QAAEmB,aAAa,EAAE,KAAK;QAAEjB,GAAG,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAE1FzE,OAAA;QACEkG,OAAO,EAAEA,CAAA,KAAM3E,WAAW,CAAC,CAACD,QAAQ,CAAE;QACtCgD,KAAK,EAAE;UACLC,OAAO,EAAE,UAAU;UACnBqB,eAAe,EAAEtE,QAAQ,GAAG,SAAS,GAAG,MAAM;UAC9C6E,KAAK,EAAE,MAAM;UACbL,MAAM,EAAE,MAAM;UACdH,YAAY,EAAE,KAAK;UACnBR,MAAM,EAAE;QACV,CAAE;QAAAV,QAAA,EAEDnD,QAAQ,GAAG,kBAAkB,GAAG;MAAqB;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EAGRvD,QAAQ,iBACPtB,OAAA;QACEkG,OAAO,EAAEA,CAAA,KAAMnE,aAAa,CAAC,IAAI,CAAE;QACnCuC,KAAK,EAAE;UACLC,OAAO,EAAE,UAAU;UACnBqB,eAAe,EAAE,MAAM;UACvBO,KAAK,EAAE,MAAM;UACbL,MAAM,EAAE,MAAM;UACdH,YAAY,EAAE,KAAK;UACnBR,MAAM,EAAE;QACV,CAAE;QAAAV,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,eAGD7E,OAAA;QAAQkG,OAAO,EAAEA,CAAA,KAAM7E,sBAAsB,CAAC,IAAI,CAAE;QAAAoD,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGhF7E,OAAA;QACEkG,OAAO,EAAEA,CAAA,KAAM;UACbnF,oBAAoB,CAAC,EAAE,CAAC;UACxBF,gBAAgB,CAAC,EAAE,CAAC;QACtB,CAAE;QACFyD,KAAK,EAAE;UACLsB,eAAe,EAAE,SAAS;UAC1BO,KAAK,EAAE,OAAO;UACdL,MAAM,EAAE,MAAM;UACdvB,OAAO,EAAE,KAAK;UACdoB,YAAY,EAAE,KAAK;UACnBR,MAAM,EAAE;QACV,CAAE;QAAAV,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAIA7E,OAAA;MAAKsE,KAAK,EAAE;QAAEQ,OAAO,EAAE;MAAO,CAAE;MAAAL,QAAA,gBAChCzE,OAAA;QAAKsE,KAAK,EAAE;UAAE8B,IAAI,EAAE,CAAC;UAAEtB,OAAO,EAAE,MAAM;UAAEmB,aAAa,EAAE;QAAS,CAAE;QAAAxB,QAAA,gBAC9DzE,OAAA,CAACL,WAAW;UACVS,IAAI,EAAEA,IAAK;UACXE,YAAY,EAAEA,YAAa;UAC3BuF,cAAc,EAAEA,cAAe;UAC/BjF,aAAa,EAAEA,aAAc;UAC7BE,iBAAiB,EAAEA,iBAAkB;UACrCC,oBAAoB,EAAEA,oBAAqB;UAC3CO,QAAQ,EAAEA,QAAS;UACnBG,iBAAiB,EAAEA,iBAAkB;UACrCE,WAAW,EAAEA,WAAY;UACzBG,UAAU,EAAEA,UAAW,CAAc;UAAA;UACrCC,aAAa,EAAEA;QAAc;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAGF7E,OAAA;UAAKsE,KAAK,EAAE;YACVQ,OAAO,EAAE,MAAM;YAEfuB,cAAc,EAAE,YAAY;YAC5BZ,KAAK,EAAE,OAAO;YACda,MAAM,EAAE,qBAAqB;YAC7BtB,GAAG,EAAE;UACP,CAAE;UAAAP,QAAA,gBACAzE,OAAA;YACEkG,OAAO,EAAE/C,eAAgB;YACzBmB,KAAK,EAAE;cACLmB,KAAK,EAAE,MAAM;cACblB,OAAO,EAAE,KAAK;cACdgC,QAAQ,EAAE,MAAM;cAChBJ,KAAK,EAAE,MAAM;cACbL,MAAM,EAAE,gBAAgB;cACxBH,YAAY,EAAE,KAAK;cACnBR,MAAM,EAAE;YACV,CAAE;YAAAV,QAAA,EAEDzD,SAAS,GAAG,IAAI,GAAG;UAAG;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eAET7E,OAAA;YACEoF,IAAI,EAAC,OAAO;YACZ1E,GAAG,EAAEF,SAAS,CAACE,GAAI;YACnBC,GAAG,EAAEH,SAAS,CAACG,GAAI;YACnB6F,KAAK,EAAElG,YAAa;YACpBgF,QAAQ,EAAGmB,CAAC,IAAKlG,eAAe,CAACmG,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACH,KAAK,CAAC,CAAE;YAC3DlC,KAAK,EAAE;cACL8B,IAAI,EAAE,CAAC;cACPV,MAAM,EAAE,KAAK;cACbkB,UAAU,EAAE,MAAM;cAClBjB,YAAY,EAAE,KAAK;cACnBJ,UAAU,EAAE,MAAM;cAClBC,gBAAgB,EAAE,MAAM;cACxBqB,OAAO,EAAE,MAAM;cACf1B,MAAM,EAAE,SAAS;cACjB2B,WAAW,EAAE;YACf;UAAE;YAAApC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN7E,OAAA;UAAKsE,KAAK,EAAE;YAAEyC,SAAS,EAAE,QAAQ;YAAER,QAAQ,EAAE,MAAM;YAAEtB,YAAY,EAAE,MAAM;YAAEkB,KAAK,EAAE;UAAO,CAAE;UAAA1B,QAAA,GAAC,QACpF,EAACnE,YAAY;QAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN7E,OAAA;QAAKsE,KAAK,EAAE;UAAE0C,UAAU,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAO,CAAE;QAAAxC,QAAA,EAChD3D,iBAAiB,CAACsD,MAAM,GAAG,CAAC,iBAC3BpE,OAAA,CAACH,gBAAgB;UACfiB,iBAAiB,EAAEA,iBAAkB;UACrCoG,QAAQ,EAAElF,eAAgB;UAC1B6D,cAAc,EAAEA;QAAe;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGL,CAACvD,QAAQ,IAAIE,cAAc,iBAC1BxB,OAAA;QAAKsE,KAAK,EAAE;UACVE,QAAQ,EAAE,UAAU;UACpB2C,IAAI,EAAE,GAAGzF,QAAQ,CAACE,CAAC,IAAI;UACvBwF,GAAG,EAAE,GAAG1F,QAAQ,CAACG,CAAC,IAAI;UACtB+E,UAAU,EAAE,MAAM;UAClBrC,OAAO,EAAE,MAAM;UACfuB,MAAM,EAAE,gBAAgB;UACxBH,YAAY,EAAE,KAAK;UACnB0B,SAAS,EAAE,4BAA4B;UACvCC,MAAM,EAAE,GAAG;UACXC,aAAa,EAAE;QACjB,CAAE;QAAA9C,QAAA,gBACAzE,OAAA;UAAAyE,QAAA,EAASjD,cAAc,CAACY;QAAM;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAAA7E,OAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,UACxC,EAACrD,cAAc,CAACc,IAAI,eAACtC,OAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,qBAChB,EAAC2C,IAAI,CAACC,KAAK,CAACjG,cAAc,CAACkB,cAAc,CAAC,eAAC1C,OAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,yBAClD,EAACrD,cAAc,CAACgB,wBAAwB,CAACkF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAA1H,OAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAChE,EAACrD,cAAc,CAACmB,UAAU,CAACgF,cAAc,CAAC,CAAC;MAAA;QAAAjD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGLzD,mBAAmB,iBAClBpB,OAAA,CAACJ,eAAe;MACdQ,IAAI,EAAEA,IAAK;MACXU,iBAAiB,EAAEA,iBAAkB;MACrCiD,aAAa,EAAEA,aAAc;MAC7B6D,KAAK,EAAEA,CAAA,KAAMvG,sBAAsB,CAAC,KAAK;IAAE;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1E,EAAA,CA3SID,IAAI;AAAA2H,EAAA,GAAJ3H,IAAI;AA6SV,eAAeA,IAAI;AAAC,IAAA2H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}