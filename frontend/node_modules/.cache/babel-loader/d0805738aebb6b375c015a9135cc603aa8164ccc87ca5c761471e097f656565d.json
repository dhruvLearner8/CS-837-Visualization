{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\MiniTrendChart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiniTrendChart = ({\n  country,\n  data,\n  color\n}) => {\n  const width = 160;\n  const height = 80;\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 20,\n    left: 30\n  };\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n  if (!data || data.length === 0) return null;\n  const years = data.map(d => d.year);\n  const values = data.map(d => d.co2);\n  const minYear = Math.min(...years);\n  const maxYear = Math.max(...years);\n  const minVal = Math.min(...values);\n  const maxVal = Math.max(...values);\n\n  // Scales using actual year and co2 values\n  const xScale = year => (year - minYear) / (maxYear - minYear) * innerWidth;\n  const yScale = val => innerHeight - (val - minVal) / (maxVal - minVal || 1) * innerHeight;\n  const linePath = data.map((d, i) => {\n    const x = xScale(d.year) + margin.left;\n    const y = yScale(d.co2) + margin.top;\n    return `${i === 0 ? 'M' : 'L'} ${x},${y}`;\n  }).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '12px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: margin.left,\n        y1: height - margin.bottom,\n        x2: width - margin.right,\n        y2: height - margin.bottom,\n        stroke: \"#ddd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: margin.left,\n        y1: margin.top,\n        x2: margin.left,\n        y2: height - margin.bottom,\n        stroke: \"#ddd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: linePath,\n        fill: \"none\",\n        stroke: color,\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: xScale(data[data.length - 1].year) + margin.left,\n        cy: yScale(data[data.length - 1].co2) + margin.top,\n        r: 2.5,\n        fill: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '4px'\n      },\n      children: \"CO\\u2082 emissions over time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = MiniTrendChart;\nexport default MiniTrendChart;\nvar _c;\n$RefreshReg$(_c, \"MiniTrendChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MiniTrendChart","country","data","color","width","height","margin","top","right","bottom","left","innerWidth","innerHeight","length","years","map","d","year","values","co2","minYear","Math","min","maxYear","max","minVal","maxVal","xScale","yScale","val","linePath","i","x","y","join","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","stroke","fill","strokeWidth","cx","cy","r","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/MiniTrendChart.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst MiniTrendChart = ({ country, data, color }) => {\r\n  const width = 160;\r\n  const height = 80;\r\n  const margin = { top: 10, right: 10, bottom: 20, left: 30 };\r\n\r\n  const innerWidth = width - margin.left - margin.right;\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n\r\n  if (!data || data.length === 0) return null;\r\n\r\n  const years = data.map(d => d.year);\r\n  const values = data.map(d => d.co2);\r\n\r\n  const minYear = Math.min(...years);\r\n  const maxYear = Math.max(...years);\r\n  const minVal = Math.min(...values);\r\n  const maxVal = Math.max(...values);\r\n\r\n  // Scales using actual year and co2 values\r\n  const xScale = (year) =>\r\n    ((year - minYear) / (maxYear - minYear)) * innerWidth;\r\n\r\n  const yScale = (val) =>\r\n    innerHeight - ((val - minVal) / (maxVal - minVal || 1)) * innerHeight;\r\n\r\n  const linePath = data\r\n    .map((d, i) => {\r\n      const x = xScale(d.year) + margin.left;\r\n      const y = yScale(d.co2) + margin.top;\r\n      return `${i === 0 ? 'M' : 'L'} ${x},${y}`;\r\n    })\r\n    .join(' ');\r\n\r\n  return (\r\n    <div style={{ fontSize: '12px' }}>\r\n      <strong>{country}</strong>\r\n      <svg width={width} height={height}>\r\n        {/* X axis line */}\r\n        <line\r\n          x1={margin.left}\r\n          y1={height - margin.bottom}\r\n          x2={width - margin.right}\r\n          y2={height - margin.bottom}\r\n          stroke=\"#ddd\"\r\n        />\r\n\r\n        {/* Y axis line */}\r\n        <line\r\n          x1={margin.left}\r\n          y1={margin.top}\r\n          x2={margin.left}\r\n          y2={height - margin.bottom}\r\n          stroke=\"#ddd\"\r\n        />\r\n\r\n        {/* Line */}\r\n        <path\r\n          d={linePath}\r\n          fill=\"none\"\r\n          stroke={color}\r\n          strokeWidth=\"2\"\r\n        />\r\n\r\n        {/* Latest data point dot */}\r\n        <circle\r\n          cx={xScale(data[data.length - 1].year) + margin.left}\r\n          cy={yScale(data[data.length - 1].co2) + margin.top}\r\n          r={2.5}\r\n          fill={color}\r\n        />\r\n      </svg>\r\n      <div style={{ marginTop: '4px' }}>COâ‚‚ emissions over time</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniTrendChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}