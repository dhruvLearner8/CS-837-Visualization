{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ScatterPlot from './ScatterPlot';\nimport * as d3 from 'd3';\n\n// Region color map (shared by legend and chart)\n// const regionColorMap = {\n//   Africa: '#8c564b',\n//   Asia: '#17becf',\n//   Europe: '#1f77b4',\n//   'North America': '#ff7f0e',\n//   Oceania: '#2ca02c',\n//   'South America': '#d62728'\n// };\n// const regionList = Object.keys(regionColorMap);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(2022);\n  const [yearRange, setYearRange] = useState({\n    min: 1950,\n    max: 2022\n  });\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n      const years = response.data.map(d => d.year);\n      const minYear = 1800; // Hardcoded if desired\n      const maxYear = 2022;\n      setYearRange({\n        min: minYear,\n        max: maxYear\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GDP vs Pollution Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yearSlider\",\n        children: [\"Year: \", selectedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"yearSlider\",\n        type: \"range\",\n        min: yearRange.min,\n        max: yearRange.max,\n        value: selectedYear,\n        onChange: e => setSelectedYear(parseInt(e.target.value)),\n        style: {\n          width: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Region Legend:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          marginTop: '10px'\n        },\n        children: regionList.map(region => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginRight: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '12px',\n              height: '12px',\n              borderRadius: '50%',\n              backgroundColor: regionColorMap[region],\n              marginRight: '6px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n      data: data,\n      selectedYear: selectedYear,\n      regionColorMap: regionColorMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"vFz1c1B1WpZhfQW8AbWCA41V+bE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","ScatterPlot","d3","jsxDEV","_jsxDEV","Home","_s","data","setData","selectedYear","setSelectedYear","yearRange","setYearRange","min","max","get","then","response","years","map","d","year","minYear","maxYear","catch","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","id","type","value","onChange","e","parseInt","target","width","display","flexWrap","marginTop","regionList","region","alignItems","marginRight","height","borderRadius","backgroundColor","regionColorMap","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ScatterPlot from './ScatterPlot';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n// Region color map (shared by legend and chart)\r\n// const regionColorMap = {\r\n//   Africa: '#8c564b',\r\n//   Asia: '#17becf',\r\n//   Europe: '#1f77b4',\r\n//   'North America': '#ff7f0e',\r\n//   Oceania: '#2ca02c',\r\n//   'South America': '#d62728'\r\n// };\r\n// const regionList = Object.keys(regionColorMap);\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(2022);\r\n  const [yearRange, setYearRange] = useState({ min: 1950, max: 2022 });\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/data')\r\n      .then(response => {\r\n        setData(response.data);\r\n\r\n        const years = response.data.map(d => d.year);\r\n        const minYear = 1800; // Hardcoded if desired\r\n        const maxYear = 2022;\r\n        setYearRange({ min: minYear, max: maxYear });\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>GDP vs Pollution Visualization</h1>\r\n\r\n      {/* Year slider */}\r\n      <div style={{ marginBottom: '30px' }}>\r\n        <label htmlFor=\"yearSlider\">Year: {selectedYear}</label><br />\r\n        <input\r\n          id=\"yearSlider\"\r\n          type=\"range\"\r\n          min={yearRange.min}\r\n          max={yearRange.max}\r\n          value={selectedYear}\r\n          onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n          style={{ width: '400px' }}\r\n        />\r\n      </div>\r\n\r\n      {/* Region Color Legend */}\r\n      <div style={{ marginBottom: '30px' }}>\r\n        <strong>Region Legend:</strong>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', marginTop: '10px' }}>\r\n          {regionList.map(region => (\r\n            <div key={region} style={{ display: 'flex', alignItems: 'center', marginRight: '20px' }}>\r\n              <div style={{\r\n                width: '12px',\r\n                height: '12px',\r\n                borderRadius: '50%',\r\n                backgroundColor: regionColorMap[region],\r\n                marginRight: '6px'\r\n              }}></div>\r\n              <span>{region}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* D3 Chart */}\r\n      <ScatterPlot data={data} selectedYear={selectedYear} regionColorMap={regionColorMap} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}