{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\ScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = ({\n  data,\n  selectedYear = 2022,\n  regionColorMap,\n  activeRegions,\n  selectedCountries,\n  setSelectedCountries\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [tooltipPos, setTooltipPos] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!data.length) return;\n    const filteredData = data.filter(d => d.year === selectedYear && d.entity !== 'World' && !d.entity.toLowerCase().includes('income') && d.gdp_per_capita > 0 && d.co2_emissions_per_capita > 0 && d.population > 0);\n    const width = 900;\n    const height = 550;\n    const margin = {\n      top: 40,\n      right: 40,\n      bottom: 60,\n      left: 80\n    };\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear old content\n\n    const chart = svg.attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n    const xScale = d3.scaleLog().domain([100, d3.max(filteredData, d => d.gdp_per_capita || 100000)]).range([0, innerWidth]);\n    const yScale = d3.scaleLog().domain([0.1, d3.max(filteredData, d => d.co2_emissions_per_capita || 10)]).range([innerHeight, 0]);\n    chart.append('g').attr('transform', `translate(0, ${innerHeight})`).call(d3.axisBottom(xScale).ticks(10, \"~s\")).append('text').attr('x', innerWidth / 2).attr('y', 40).attr('fill', '#000').attr('text-anchor', 'middle').text('GDP per capita (log scale)');\n    chart.append('g').call(d3.axisLeft(yScale).ticks(10, \"~s\")).append('text').attr('transform', 'rotate(-90)').attr('x', -innerHeight / 2).attr('y', -60).attr('fill', '#000').attr('text-anchor', 'middle').text('COâ‚‚ emissions per capita (log scale)');\n\n    // RING CIRCLES (outer)\n    chart.selectAll('circle.ring').data(filteredData.filter(d => activeRegions.includes(d.region))).enter().append('circle').attr('class', 'ring').attr('cx', d => xScale(d.gdp_per_capita || 100)).attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1)).attr('r', d => Math.sqrt(d.population) / 1000 + 4).attr('fill', 'none').attr('stroke', d => regionColorMap[d.region] || '#000').attr('stroke-width', 2).attr('opacity', 1);\n\n    // MAIN CIRCLES\n    chart.selectAll('circle.bubble').data(filteredData).enter().append('circle').attr('class', 'bubble').attr('cx', d => xScale(d.gdp_per_capita || 100)).attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1)).attr('r', d => {\n      var _selectedCountry;\n      const baseR = Math.sqrt(d.population) / 1000;\n      return ((_selectedCountry = selectedCountry) === null || _selectedCountry === void 0 ? void 0 : _selectedCountry.entity) === d.entity ? baseR + 4 : baseR;\n    }).attr('fill', d => {\n      var _selectedCountry2;\n      if (((_selectedCountry2 = selectedCountry) === null || _selectedCountry2 === void 0 ? void 0 : _selectedCountry2.entity) === d.entity) {\n        return d3.color(regionColorMap[d.region]).brighter(0.5);\n      }\n      return activeRegions.includes(d.region) ? regionColorMap[d.region] || '#000' : '#ccc';\n    }).attr('stroke', d => {\n      var _selectedCountry3;\n      return ((_selectedCountry3 = selectedCountry) === null || _selectedCountry3 === void 0 ? void 0 : _selectedCountry3.entity) === d.entity ? regionColorMap[d.region] : 'none';\n    }).attr('stroke-width', d => {\n      var _selectedCountry4;\n      return ((_selectedCountry4 = selectedCountry) === null || _selectedCountry4 === void 0 ? void 0 : _selectedCountry4.entity) === d.entity ? 3 : 0;\n    }).attr('opacity', 0.85).on('mouseover', function (event, d) {\n      d3.select(this).attr('stroke', regionColorMap[d.region] || '#000').attr('stroke-width', 3).attr('fill', d3.color(regionColorMap[d.region]).brighter(0.5)).attr('r', Math.sqrt(d.population) / 1000 + 4);\n    }).on('mouseout', function (event, d) {\n      var _selectedCountry5, _selectedCountry6, _selectedCountry7;\n      const baseR = Math.sqrt(d.population) / 1000;\n      d3.select(this).attr('r', ((_selectedCountry5 = selectedCountry) === null || _selectedCountry5 === void 0 ? void 0 : _selectedCountry5.entity) === d.entity ? baseR + 4 : baseR).attr('stroke', ((_selectedCountry6 = selectedCountry) === null || _selectedCountry6 === void 0 ? void 0 : _selectedCountry6.entity) === d.entity ? regionColorMap[d.region] : 'none').attr('stroke-width', ((_selectedCountry7 = selectedCountry) === null || _selectedCountry7 === void 0 ? void 0 : _selectedCountry7.entity) === d.entity ? 3 : 0).attr('fill', d => {\n        var _selectedCountry8;\n        if (((_selectedCountry8 = selectedCountry) === null || _selectedCountry8 === void 0 ? void 0 : _selectedCountry8.entity) === d.entity) {\n          return d3.color(regionColorMap[d.region]).brighter(0.5);\n        }\n        return activeRegions.includes(d.region) ? regionColorMap[d.region] || '#000' : '#ccc';\n      });\n    }).on('click', function (event, d) {\n      event.stopPropagation();\n      setTooltipPos({\n        x: event.pageX + 10,\n        y: event.pageY - 28\n      });\n      setSelectedCountry(d);\n    });\n\n    // Labels\n    chart.selectAll('text.label').remove();\n    chart.selectAll('text.label').data(filteredData.filter(d => activeRegions.includes(d.region))).enter().append('text').attr('class', 'label').attr('x', d => xScale(d.gdp_per_capita || 100)).attr('y', d => yScale(d.co2_emissions_per_capita || 0.1) - 8).text(d => d.entity).attr('font-size', '10px').attr('fill', d => regionColorMap[d.region] || '#333').attr('font-weight', 'bold').attr('text-anchor', 'middle');\n  }, [data, selectedYear, activeRegions, regionColorMap, selectedCountry]);\n\n  // Deselect on outside click\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setSelectedCountry(null);\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, [setSelectedCountry]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: `${tooltipPos.x}px`,\n        top: `${tooltipPos.y}px`,\n        background: '#fff',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: '6px',\n        boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n        zIndex: 100,\n        pointerEvents: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedCountry.entity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 52\n      }, this), \"Year: \", selectedCountry.year, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 39\n      }, this), \"GDP per capita: $\", Math.round(selectedCountry.gdp_per_capita), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 72\n      }, this), \"CO\\u2082 per capita: \", selectedCountry.co2_emissions_per_capita.toFixed(2), \" t\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 82\n      }, this), \"Population: \", selectedCountry.population.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ScatterPlot, \"AcdetWS1RfmLSC8chEsUVUPGuYs=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","ScatterPlot","data","selectedYear","regionColorMap","activeRegions","selectedCountries","setSelectedCountries","_s","svgRef","tooltipPos","setTooltipPos","x","y","length","filteredData","filter","d","year","entity","toLowerCase","includes","gdp_per_capita","co2_emissions_per_capita","population","width","height","margin","top","right","bottom","left","svg","select","current","selectAll","remove","chart","attr","append","innerWidth","innerHeight","xScale","scaleLog","domain","max","range","yScale","call","axisBottom","ticks","text","axisLeft","region","enter","Math","sqrt","_selectedCountry","baseR","selectedCountry","_selectedCountry2","color","brighter","_selectedCountry3","_selectedCountry4","on","event","_selectedCountry5","_selectedCountry6","_selectedCountry7","_selectedCountry8","stopPropagation","pageX","pageY","setSelectedCountry","handleClickOutside","document","addEventListener","removeEventListener","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","style","position","background","padding","border","borderRadius","boxShadow","zIndex","pointerEvents","round","toFixed","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/ScatterPlot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst ScatterPlot = ({\r\n  data,\r\n  selectedYear = 2022,\r\n  regionColorMap,\r\n  activeRegions,\r\n  selectedCountries,\r\n  setSelectedCountries\r\n}) => {\r\n  const svgRef = useRef();\r\n  const [tooltipPos, setTooltipPos] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return;\r\n\r\n    const filteredData = data.filter(d =>\r\n      d.year === selectedYear &&\r\n      d.entity !== 'World' &&\r\n      !d.entity.toLowerCase().includes('income') &&\r\n      d.gdp_per_capita > 0 &&\r\n      d.co2_emissions_per_capita > 0 &&\r\n      d.population > 0\r\n    );\r\n\r\n    const width = 900;\r\n    const height = 550;\r\n    const margin = { top: 40, right: 40, bottom: 60, left: 80 };\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove(); // Clear old content\r\n\r\n    const chart = svg\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const xScale = d3.scaleLog()\r\n      .domain([100, d3.max(filteredData, d => d.gdp_per_capita || 100000)])\r\n      .range([0, innerWidth]);\r\n\r\n    const yScale = d3.scaleLog()\r\n      .domain([0.1, d3.max(filteredData, d => d.co2_emissions_per_capita || 10)])\r\n      .range([innerHeight, 0]);\r\n\r\n    chart.append('g')\r\n      .attr('transform', `translate(0, ${innerHeight})`)\r\n      .call(d3.axisBottom(xScale).ticks(10, \"~s\"))\r\n      .append('text')\r\n      .attr('x', innerWidth / 2)\r\n      .attr('y', 40)\r\n      .attr('fill', '#000')\r\n      .attr('text-anchor', 'middle')\r\n      .text('GDP per capita (log scale)');\r\n\r\n    chart.append('g')\r\n      .call(d3.axisLeft(yScale).ticks(10, \"~s\"))\r\n      .append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -innerHeight / 2)\r\n      .attr('y', -60)\r\n      .attr('fill', '#000')\r\n      .attr('text-anchor', 'middle')\r\n      .text('COâ‚‚ emissions per capita (log scale)');\r\n\r\n    // RING CIRCLES (outer)\r\n    chart.selectAll('circle.ring')\r\n      .data(filteredData.filter(d => activeRegions.includes(d.region)))\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'ring')\r\n      .attr('cx', d => xScale(d.gdp_per_capita || 100))\r\n      .attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1))\r\n      .attr('r', d => Math.sqrt(d.population) / 1000 + 4)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => regionColorMap[d.region] || '#000')\r\n      .attr('stroke-width', 2)\r\n      .attr('opacity', 1);\r\n\r\n    // MAIN CIRCLES\r\n    chart.selectAll('circle.bubble')\r\n      .data(filteredData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'bubble')\r\n      .attr('cx', d => xScale(d.gdp_per_capita || 100))\r\n      .attr('cy', d => yScale(d.co2_emissions_per_capita || 0.1))\r\n      .attr('r', d => {\r\n        const baseR = Math.sqrt(d.population) / 1000;\r\n        return selectedCountry?.entity === d.entity ? baseR + 4 : baseR;\r\n      })\r\n      .attr('fill', d => {\r\n        if (selectedCountry?.entity === d.entity) {\r\n          return d3.color(regionColorMap[d.region]).brighter(0.5);\r\n        }\r\n        return activeRegions.includes(d.region)\r\n          ? regionColorMap[d.region] || '#000'\r\n          : '#ccc';\r\n      })\r\n      .attr('stroke', d =>\r\n        selectedCountry?.entity === d.entity ? regionColorMap[d.region] : 'none'\r\n      )\r\n      .attr('stroke-width', d =>\r\n        selectedCountry?.entity === d.entity ? 3 : 0\r\n      )\r\n      .attr('opacity', 0.85)\r\n      .on('mouseover', function (event, d) {\r\n        d3.select(this)\r\n          .attr('stroke', regionColorMap[d.region] || '#000')\r\n          .attr('stroke-width', 3)\r\n          .attr('fill', d3.color(regionColorMap[d.region]).brighter(0.5))\r\n          .attr('r', Math.sqrt(d.population) / 1000 + 4);\r\n      })\r\n      .on('mouseout', function (event, d) {\r\n        const baseR = Math.sqrt(d.population) / 1000;\r\n        d3.select(this)\r\n          .attr('r', selectedCountry?.entity === d.entity ? baseR + 4 : baseR)\r\n          .attr('stroke', selectedCountry?.entity === d.entity ? regionColorMap[d.region] : 'none')\r\n          .attr('stroke-width', selectedCountry?.entity === d.entity ? 3 : 0)\r\n          .attr('fill', d => {\r\n            if (selectedCountry?.entity === d.entity) {\r\n              return d3.color(regionColorMap[d.region]).brighter(0.5);\r\n            }\r\n            return activeRegions.includes(d.region)\r\n              ? regionColorMap[d.region] || '#000'\r\n              : '#ccc';\r\n          });\r\n      })\r\n      .on('click', function (event, d) {\r\n        event.stopPropagation();\r\n        setTooltipPos({ x: event.pageX + 10, y: event.pageY - 28 });\r\n        setSelectedCountry(d);\r\n      });\r\n\r\n    // Labels\r\n    chart.selectAll('text.label').remove();\r\n    chart.selectAll('text.label')\r\n      .data(filteredData.filter(d => activeRegions.includes(d.region)))\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', d => xScale(d.gdp_per_capita || 100))\r\n      .attr('y', d => yScale(d.co2_emissions_per_capita || 0.1) - 8)\r\n      .text(d => d.entity)\r\n      .attr('font-size', '10px')\r\n      .attr('fill', d => regionColorMap[d.region] || '#333')\r\n      .attr('font-weight', 'bold')\r\n      .attr('text-anchor', 'middle');\r\n  }, [data, selectedYear, activeRegions, regionColorMap, selectedCountry]);\r\n\r\n  // Deselect on outside click\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      setSelectedCountry(null);\r\n    };\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => document.removeEventListener('click', handleClickOutside);\r\n  }, [setSelectedCountry]);\r\n\r\n  return (\r\n    <>\r\n      <svg ref={svgRef}></svg>\r\n      {selectedCountry && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          left: `${tooltipPos.x}px`,\r\n          top: `${tooltipPos.y}px`,\r\n          background: '#fff',\r\n          padding: '10px',\r\n          border: '1px solid #ccc',\r\n          borderRadius: '6px',\r\n          boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\r\n          zIndex: 100,\r\n          pointerEvents: 'none'\r\n        }}>\r\n          <strong>{selectedCountry.entity}</strong><br />\r\n          Year: {selectedCountry.year}<br />\r\n          GDP per capita: ${Math.round(selectedCountry.gdp_per_capita)}<br />\r\n          COâ‚‚ per capita: {selectedCountry.co2_emissions_per_capita.toFixed(2)} t<br />\r\n          Population: {selectedCountry.population.toLocaleString()}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScatterPlot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}