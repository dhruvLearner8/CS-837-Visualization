{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\CountrySelector.js\",\n  _s = $RefreshSig$();\n// CountrySelector.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountrySelector = ({\n  data,\n  activeRegions,\n  selectedCountries,\n  toggleRegion,\n  toggleCountry,\n  regionList,\n  setShowSelector\n}) => {\n  _s();\n  const [search, setSearch] = useState('');\n  const uniqueCountries = Array.from(new Map(data.map(d => [d.entity, d])).values());\n  const filteredCountries = uniqueCountries.filter(country => country.entity.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      width: '300px',\n      height: '100%',\n      backgroundColor: '#fff',\n      borderLeft: '1px solid #ccc',\n      padding: '16px',\n      overflowY: 'scroll',\n      zIndex: 999\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Select Countries and Regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowSelector(false),\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a country or region\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      style: {\n        width: '100%',\n        marginBottom: '12px',\n        padding: '6px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: \"Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), regionList.map(region => /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block',\n        marginBottom: '6px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: activeRegions.includes(region),\n        onChange: () => toggleRegion(region)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), \" \", region]\n    }, region, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: \"Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), filteredCountries.map(country => /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block',\n        marginBottom: '6px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedCountries.some(c => c.entity === country.entity),\n        onChange: () => toggleCountry(country)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \" \", country.entity]\n    }, country.entity, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CountrySelector, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n_c = CountrySelector;\nexport default CountrySelector;\nvar _c;\n$RefreshReg$(_c, \"CountrySelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CountrySelector","data","activeRegions","selectedCountries","toggleRegion","toggleCountry","regionList","setShowSelector","_s","search","setSearch","uniqueCountries","Array","from","Map","map","d","entity","values","filteredCountries","filter","country","toLowerCase","includes","style","position","top","right","width","height","backgroundColor","borderLeft","padding","overflowY","zIndex","children","display","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","marginBottom","marginTop","region","checked","some","c","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/CountrySelector.js"],"sourcesContent":["// CountrySelector.js\r\nimport React, { useState } from 'react';\r\n\r\nconst CountrySelector = ({\r\n  data,\r\n  activeRegions,\r\n  selectedCountries,\r\n  toggleRegion,\r\n  toggleCountry,\r\n  regionList,\r\n  setShowSelector\r\n}) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const uniqueCountries = Array.from(\r\n    new Map(\r\n      data.map(d => [d.entity, d])\r\n    ).values()\r\n  );\r\n\r\n  const filteredCountries = uniqueCountries.filter(country =>\r\n    country.entity.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      right: 0,\r\n      width: '300px',\r\n      height: '100%',\r\n      backgroundColor: '#fff',\r\n      borderLeft: '1px solid #ccc',\r\n      padding: '16px',\r\n      overflowY: 'scroll',\r\n      zIndex: 999\r\n    }}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h4>Select Countries and Regions</h4>\r\n        <button onClick={() => setShowSelector(false)}>‚ùå</button>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a country or region\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        style={{ width: '100%', marginBottom: '12px', padding: '6px' }}\r\n      />\r\n\r\n      <h5 style={{ marginTop: '16px' }}>Regions</h5>\r\n      {regionList.map(region => (\r\n        <label key={region} style={{ display: 'block', marginBottom: '6px' }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={activeRegions.includes(region)}\r\n            onChange={() => toggleRegion(region)}\r\n          /> {region}\r\n        </label>\r\n      ))}\r\n\r\n      <h5 style={{ marginTop: '16px' }}>Countries</h5>\r\n      {filteredCountries.map(country => (\r\n        <label key={country.entity} style={{ display: 'block', marginBottom: '6px' }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={selectedCountries.some(c => c.entity === country.entity)}\r\n            onChange={() => toggleCountry(country)}\r\n          /> {country.entity}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountrySelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}