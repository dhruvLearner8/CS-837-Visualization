{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\CS 837 Information Vis\\\\gdp-pollution-app\\\\frontend\\\\src\\\\components\\\\ScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data.length) return;\n    const width = 800;\n    const height = 500;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 70\n    };\n    const regionColors = d3.scaleOrdinal().domain(['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America']).range(['#8c564b', '#17becf', '#1f77b4', '#ff7f0e', '#2ca02c', '#d62728']);\n\n    // Select SVG\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).style('background', '#f9f9f9').style('border', '1px solid #ccc').append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Scales\n    const xScale = d3.scaleLog().domain([100, d3.max(data, d => d.gdp_per_capita || 100000)]).range([0, width - margin.left - margin.right]);\n    const yScale = d3.scaleLog().domain([0.1, d3.max(data, d => d.co2_emissions_per_capita || 10)]).range([height - margin.top - margin.bottom, 0]);\n\n    // Axes\n    svg.append('g').attr('transform', `translate(0,${height - margin.bottom - margin.top})`).call(d3.axisBottom(xScale));\n    svg.append('g').call(d3.axisLeft(yScale));\n\n    // Points\n    svg.selectAll('circle').data(data).enter().append('circle').attr('cx', d => xScale(d.gdp_per_capita || 1)).attr('cy', d => yScale(d.co2_emissions_per_capita || 1)).attr('r', d => Math.sqrt(d.population) / 500) // Optional: size based on population\n    .attr('fill', 'steelblue').attr('opacity', 0.7).append('title').text(d => `${d.entity} (${d.year})\\nGDP: ${d.gdp_per_capita}\\nCO₂: ${d.co2_emissions_per_capita}`);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_s(ScatterPlot, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","ScatterPlot","data","_s","svgRef","length","width","height","margin","top","right","bottom","left","regionColors","scaleOrdinal","domain","range","svg","select","current","attr","style","append","xScale","scaleLog","max","d","gdp_per_capita","yScale","co2_emissions_per_capita","call","axisBottom","axisLeft","selectAll","enter","Math","sqrt","population","text","entity","year","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/CS 837 Information Vis/gdp-pollution-app/frontend/src/components/ScatterPlot.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst ScatterPlot = ({ data }) => {\r\n  const svgRef = useRef();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return;\r\n\r\n    const width = 800;\r\n    const height = 500;\r\n    const margin = { top: 20, right: 30, bottom: 50, left: 70 };\r\n\r\n    const regionColors = d3.scaleOrdinal()\r\n  .domain(['Africa', 'Asia', 'Europe', 'North America', 'Oceania', 'South America'])\r\n  .range(['#8c564b', '#17becf', '#1f77b4', '#ff7f0e', '#2ca02c', '#d62728']);\r\n\r\n\r\n    // Select SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .style('background', '#f9f9f9')\r\n      .style('border', '1px solid #ccc')\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // Scales\r\n    const xScale = d3.scaleLog()\r\n  .domain([100, d3.max(data, d => d.gdp_per_capita || 100000)])\r\n  .range([0, width - margin.left - margin.right]);\r\n\r\nconst yScale = d3.scaleLog()\r\n  .domain([0.1, d3.max(data, d => d.co2_emissions_per_capita || 10)])\r\n  .range([height - margin.top - margin.bottom, 0]);\r\n\r\n    // Axes\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height - margin.bottom - margin.top})`)\r\n      .call(d3.axisBottom(xScale));\r\n\r\n    svg.append('g')\r\n      .call(d3.axisLeft(yScale));\r\n\r\n    // Points\r\n    svg.selectAll('circle')\r\n      .data(data)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('cx', d => xScale(d.gdp_per_capita || 1))\r\n      .attr('cy', d => yScale(d.co2_emissions_per_capita || 1))\r\n      .attr('r', d => Math.sqrt(d.population) / 500) // Optional: size based on population\r\n      .attr('fill', 'steelblue')\r\n      .attr('opacity', 0.7)\r\n      .append('title')\r\n      .text(d => `${d.entity} (${d.year})\\nGDP: ${d.gdp_per_capita}\\nCO₂: ${d.co2_emissions_per_capita}`);\r\n\r\n  }, [data]);\r\n\r\n  return <svg ref={svgRef}></svg>;\r\n};\r\n\r\nexport default ScatterPlot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}